{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Raj\\\\Desktop\\\\Social Networking\\\\Frontend\\\\client\\\\src\\\\components\\\\screens\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { UserContext } from '../../App';\n\nconst Profile = () => {\n  _s();\n\n  const [mypics, setpics] = useState([]);\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext);\n  console.log(\"state becomes: \" + state);\n  useEffect(() => {\n    fetch('/myposts', {\n      headers: {\n        \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\n      }\n    }).then(res => res.json()).then(result => {\n      console.log(\"Result===>>>>\" + JSON.stringify(result));\n      setpics(result.myposts);\n    });\n  }, []);\n\n  const likePost = id => {\n    fetch('/like', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      //result means the updated post\n      const newdata = data.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      }); //newdata means the entire updated array consisting of all the posts of every user in the home page.\n\n      setpics(newdata);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const unlikePost = id => {\n    fetch('/unlike', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      // console.log(\"result: \"+JSON.stringify(result))\n      // console.log(\"item: \"+JSON.stringify(data[0]))\n      const newdata = data.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      }); //newdata means the entire updated array consisting of all the posts of every user in the home page.\n\n      setpics(newdata);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const makeComment = (text, postId) => {\n    fetch('/comment', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId,\n        text\n      })\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      const newdata = data.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      });\n      setpics(newdata);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const deletepost = postid => {\n    fetch('/deletepost/' + postid, {\n      method: \"delete\",\n      headers: {\n        Authorization: \"token \" + localStorage.getItem(\"jwt\")\n      }\n    }).then(res => res.json()).then(result => {\n      console.log(result); //Printing the deleted post in the console.\n\n      const newData = mypics.filter(item => {\n        return item._id != result._id;\n      });\n      setpics(newData);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: \"550px\",\n      margin: \"0px auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-around\",\n        margin: \"18px 0px\",\n        borderBottom: \"1px solid grey\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            width: \"160px\",\n            height: \"160px\",\n            borderRadius: \"80px\"\n          },\n          src: \"https://images.unsplash.com/photo-1609439408825-b2a24e29871f?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=334&q=80\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: state ? state.name : \"loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            width: \"108%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"2 posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"0 followers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"0 followings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery\",\n      children: mypics.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card home-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                color: \"grey\",\n                fontFamily: 'cursive',\n                paddingLeft: '20px',\n                paddingTop: '10px',\n                cursor: 'pointer'\n              },\n              children: [\"Posted by \", item.postedBy.name, item.postedBy._id == state._id && /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"material-icons\",\n                style: {\n                  float: \"right\"\n                },\n                onClick: () => {\n                  deletepost(item._id);\n                },\n                children: \"delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 40\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-image card-content\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.photo\n              }, item._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"material-icons\",\n                style: {\n                  color: \"red\"\n                },\n                children: \"favorite\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 41\n              }, this), item.likes.includes(state._id) ? /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"material-icons\",\n                style: {\n                  cursor: 'pointer'\n                },\n                onClick: () => {\n                  unlikePost(item._id);\n                },\n                children: \"thumb_down\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"material-icons\",\n                style: {\n                  cursor: 'pointer'\n                },\n                onClick: () => {\n                  likePost(item._id);\n                },\n                children: \"thumb_up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: [item.likes.length, \" likes\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 41\n              }, this), item._id == currentPost ? item.comments.map(record => {\n                return /*#__PURE__*/_jsxDEV(\"h6\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontWeight: \"700\"\n                    },\n                    children: [record.postedBy.name, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 74\n                  }, this), record.text]\n                }, record._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 53\n                }, this);\n              }) : /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  fontWeight: \"300\"\n                },\n                children: \"Click on show below to check comments..\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: e => {\n                  e.preventDefault();\n                  makeComment(e.target[0].value, item._id);\n                  e.target[0].value = \"\"; //I added this line\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Add a comment\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 45\n                }, this), item._id == currentPost ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  class: \"btn btn-primary\",\n                  onClick: () => {\n                    setCurrentPost(\"\");\n                  },\n                  children: \"Hide\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 49\n                }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  class: \"btn btn-primary\",\n                  onClick: () => {\n                    setCurrentPost(item._id);\n                  },\n                  children: \"Show\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 37\n            }, this)]\n          }, item._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Profile, \"K9etU7WCBjp7KLBLxawyc4JV6ME=\");\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Users/Raj/Desktop/Social Networking/Frontend/client/src/components/screens/Profile.js"],"names":["React","useEffect","useState","useContext","UserContext","Profile","mypics","setpics","state","dispatch","console","log","fetch","headers","localStorage","getItem","then","res","json","result","JSON","stringify","myposts","likePost","id","method","body","postId","newdata","data","map","item","_id","catch","err","unlikePost","makeComment","text","deletepost","postid","Authorization","newData","filter","maxWidth","margin","display","justifyContent","borderBottom","width","height","borderRadius","name","color","fontFamily","paddingLeft","paddingTop","cursor","postedBy","float","title","photo","likes","includes","length","currentPost","comments","record","fontWeight","e","preventDefault","target","value","setCurrentPost"],"mappings":"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","sourcesContent":["import React,{useEffect,useState,useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\n\r\nconst Profile=()=>{\r\n    const [mypics,setpics]=useState([])\r\n    const {state,dispatch}=useContext(UserContext)\r\n    console.log(\"state becomes: \"+state)\r\n    useEffect(()=>{\r\n        fetch('/myposts',{\r\n            headers:{\r\n                \"Authorization\":\"token \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(\"Result===>>>>\"+JSON.stringify(result))\r\n            setpics(result.myposts)\r\n        })\r\n    },[])\r\n\r\n    const likePost=(id)=>{\r\n        fetch('/like',{\r\n            method: \"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"token \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            //result means the updated post\r\n            const newdata=data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            //newdata means the entire updated array consisting of all the posts of every user in the home page.\r\n            setpics(newdata)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    const unlikePost=(id)=>{\r\n        fetch('/unlike',{\r\n            method: \"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"token \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            // console.log(\"result: \"+JSON.stringify(result))\r\n            // console.log(\"item: \"+JSON.stringify(data[0]))\r\n            const newdata=data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            //newdata means the entire updated array consisting of all the posts of every user in the home page.\r\n            setpics(newdata)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const makeComment=(text,postId)=>{\r\n        fetch('/comment',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"token \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId,\r\n                text\r\n            })\r\n        })\r\n        .then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            const newdata=data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            setpics(newdata)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const deletepost=(postid)=>{\r\n        fetch('/deletepost/'+postid,{\r\n            method: \"delete\",\r\n            headers: {\r\n                Authorization: \"token \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)//Printing the deleted post in the console.\r\n            const newData=mypics.filter(item=>{\r\n                return item._id!=result._id\r\n            })\r\n            setpics(newData)\r\n        })\r\n    }\r\n    return (\r\n        <div style={{\r\n            maxWidth: \"550px\", margin: \"0px auto\"\r\n        }}>\r\n            <div style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-around\",\r\n                margin: \"18px 0px\",\r\n                borderBottom: \"1px solid grey\"\r\n            }}>\r\n                <div>\r\n                    <img style={{width: \"160px\", height: \"160px\", borderRadius: \"80px\"}}\r\n                    src=\"https://images.unsplash.com/photo-1609439408825-b2a24e29871f?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=334&q=80\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <h4>{state?state.name:\"loading...\"}</h4>\r\n                    <div style={{display: \"flex\", justifyContent: \"space-between\", width:\"108%\"}}>\r\n                        <h6>2 posts</h6>\r\n                        <h6>0 followers</h6>\r\n                        <h6>0 followings</h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"gallery\">\r\n                {\r\n                    mypics.map((item)=>{\r\n                        return (\r\n                            <div>\r\n                                <div key={item._id} className=\"card home-card\">\r\n                                    <h5 \r\n                                    style={{color:\"grey\",fontFamily:'cursive',paddingLeft:'20px',paddingTop:'10px',cursor:'pointer'}}>Posted by {item.postedBy.name}\r\n                                    {/*item.postedBy._id refers to the post id and state._id refers to the user id*/}\r\n                                    {item.postedBy._id==state._id \r\n                                    && <i className=\"material-icons\" style={{float:\"right\"}}\r\n                                    onClick={()=>{deletepost(item._id)}}\r\n                                    >delete</i>}\r\n                                    </h5>\r\n                                    <div className=\"card-content\">\r\n                                        <h6>{item.title}</h6>\r\n                                        <p>{item.body}</p>\r\n                                    </div>\r\n                                    <div className=\"card-image card-content\">\r\n                                        <img key={item._id} src={item.photo}/>\r\n                                    </div>\r\n                                    <div className=\"card-content\">\r\n                                        <i className=\"material-icons\" style={{color: \"red\"}}>favorite</i>\r\n                                        {\r\n                                            item.likes.includes(state._id)\r\n                                            ?\r\n                                            <i className=\"material-icons\" style={{cursor: 'pointer'}} onClick={()=>{unlikePost(item._id)}}>thumb_down</i>\r\n                                            :\r\n                                            <i className=\"material-icons\" style={{cursor: 'pointer'}} onClick={()=>{likePost(item._id)}}>thumb_up</i>\r\n                                        }\r\n                                        <h6>{item.likes.length} likes</h6>\r\n                                        {\r\n                                            (item._id==currentPost) \r\n                                            ?\r\n                                            item.comments.map(record=>{\r\n                                                return (\r\n                                                    <h6 key={record._id}><span style={{fontWeight:\"700\"}}>{record.postedBy.name} </span>{record.text}</h6>\r\n                                                )\r\n                                            })\r\n                                            :\r\n                                            <p style={{fontWeight:\"300\"}}>Click on show below to check comments..</p>\r\n                                        }\r\n                                        <form onSubmit={(e)=>{\r\n                                            e.preventDefault()\r\n                                            makeComment(e.target[0].value,item._id)\r\n                                            e.target[0].value=\"\"//I added this line\r\n                                        }}>\r\n                                            <input type=\"text\" placeholder=\"Add a comment\"/>\r\n                                            {\r\n                                                (item._id==currentPost)\r\n                                                ?\r\n                                                <button type=\"button\" class=\"btn btn-primary\" onClick={()=>{setCurrentPost(\"\")}}>Hide</button>\r\n                                                :\r\n                                                <button type=\"button\" class=\"btn btn-primary\" onClick={()=>{setCurrentPost(item._id)}}>Show</button>\r\n                                            }\r\n                                    \r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile"]},"metadata":{},"sourceType":"module"}