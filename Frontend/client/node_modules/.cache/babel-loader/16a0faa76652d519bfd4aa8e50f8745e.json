{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Raj\\\\Desktop\\\\Social Networking\\\\Frontend\\\\client\\\\src\\\\components\\\\screens\\\\UserProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { UserContext } from '../../App';\nimport { useParams } from 'react-router-dom';\n\nconst Profile = () => {\n  _s();\n\n  const [userProfile, setProfile] = useState(null);\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext);\n  const {\n    userid\n  } = useParams();\n  console.log(userid);\n  useEffect(() => {\n    fetch(`/user/${userid}`, {\n      headers: {\n        \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\n      }\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      setProfile(result);\n    });\n  }, []);\n\n  const likePost = id => {\n    fetch('/like', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      //result means the updated post\n      const newdata = userProfile.posts.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      }); //newdata means the entire updated array consisting of all the posts of every user in the home page.\n\n      setProfile(newdata);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const unlikePost = id => {\n    fetch('/unlike', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      // console.log(\"result: \"+JSON.stringify(result))\n      // console.log(\"item: \"+JSON.stringify(data[0]))\n      const newdata = userProfile.posts.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      }); //newdata means the entire updated array consisting of all the posts of every user in the home page.\n\n      setProfile(newdata);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const loveReact = id => {\n    fetch('/fav', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      //result means the updated post\n      const newdata = userProfile.posts.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      }); //newdata means the entire updated array consisting of all the posts of every user in the home page.\n\n      setProfile(newdata);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const removeLoveReact = id => {\n    fetch('/removefav', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      // console.log(\"result: \"+JSON.stringify(result))\n      // console.log(\"item: \"+JSON.stringify(data[0]))\n      const newdata = userProfile.posts.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      }); //newdata means the entire updated array consisting of all the posts of every user in the home page.\n\n      setProfile(newdata);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const makeComment = (text, postId) => {\n    fetch('/comment', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId,\n        text\n      })\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      const newdata = userProfile.posts.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      });\n      setProfile(newdata);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const deletepost = postid => {\n    fetch('/deletepost/' + postid, {\n      method: \"delete\",\n      headers: {\n        Authorization: \"token \" + localStorage.getItem(\"jwt\")\n      }\n    }).then(res => res.json()).then(result => {\n      console.log(result); //Printing the deleted post in the console.\n\n      const newData = userProfile.filter(item => {\n        return item._id != result._id;\n      });\n      setProfile(newData);\n    });\n  };\n\n  const [currentPost, setCurrentPost] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !userProfile ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"550px\",\n        margin: \"0px auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-around\",\n          margin: \"18px 0px\",\n          borderBottom: \"1px solid grey\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              width: \"160px\",\n              height: \"160px\",\n              borderRadius: \"80px\"\n            },\n            src: \"https://images.unsplash.com/photo-1609439408825-b2a24e29871f?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=334&q=80\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: state ? state.name : \"loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              width: \"108%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \" posts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"0 followers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"0 followings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gallery\",\n        children: userProfile.posts.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card home-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                style: {\n                  color: \"grey\",\n                  fontFamily: 'cursive',\n                  paddingLeft: '20px',\n                  paddingTop: '10px',\n                  cursor: 'pointer'\n                },\n                children: [\"Posted by \", item.postedBy.name, item.postedBy._id == state._id && /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"material-icons\",\n                  style: {\n                    float: \"right\",\n                    cursor: \"pointer\"\n                  },\n                  onClick: () => {\n                    deletepost(item._id);\n                  },\n                  children: \"delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 40\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                  children: item.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: item.body\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-image card-content\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: item.photo\n                }, item._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-content\",\n                children: [item.favourite.includes(state._id) ? /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"material-icons\",\n                  style: {\n                    color: \"red\",\n                    cursor: \"pointer\"\n                  },\n                  onClick: () => {\n                    removeLoveReact(item._id);\n                  },\n                  children: \"favorite\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"material-icons\",\n                  style: {\n                    color: \"red\",\n                    cursor: \"pointer\"\n                  },\n                  onClick: () => {\n                    loveReact(item._id);\n                  },\n                  children: \"favorite_border\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [item.favourite.length, \"    \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 41\n                }, this), item.likes.includes(state._id) ? /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"material-icons\",\n                  style: {\n                    cursor: 'pointer'\n                  },\n                  onClick: () => {\n                    unlikePost(item._id);\n                  },\n                  children: \"thumb_up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"material-icons\",\n                  style: {\n                    cursor: 'pointer'\n                  },\n                  onClick: () => {\n                    likePost(item._id);\n                  },\n                  children: \"thumb_up_off_alt\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: item.likes.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 41\n                }, this), item._id == currentPost ? item.comments.map(record => {\n                  return /*#__PURE__*/_jsxDEV(\"h6\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        fontWeight: \"700\"\n                      },\n                      children: [record.postedBy.name, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 256,\n                      columnNumber: 74\n                    }, this), record.text]\n                  }, record._id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 53\n                  }, this);\n                }) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    fontWeight: \"300\"\n                  },\n                  children: \"Click on show below to check comments..\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                  onSubmit: e => {\n                    e.preventDefault();\n                    makeComment(e.target[0].value, item._id);\n                    e.target[0].value = \"\"; //I added this line\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    placeholder: \"Add a comment\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 45\n                  }, this), item._id == currentPost ? /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    class: \"btn btn-primary\",\n                    onClick: () => {\n                      setCurrentPost(\"\");\n                    },\n                    children: \"Hide\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 49\n                  }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    class: \"btn btn-primary\",\n                    onClick: () => {\n                      setCurrentPost(item._id);\n                    },\n                    children: \"Show\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 37\n              }, this)]\n            }, item._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Profile, \"TL8UybPwsLAmdL03E3Ucf/vrX/E=\", false, function () {\n  return [useParams];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Users/Raj/Desktop/Social Networking/Frontend/client/src/components/screens/UserProfile.js"],"names":["React","useEffect","useState","useContext","UserContext","useParams","Profile","userProfile","setProfile","state","dispatch","userid","console","log","fetch","headers","localStorage","getItem","then","res","json","result","likePost","id","method","body","JSON","stringify","postId","newdata","posts","map","item","_id","catch","err","unlikePost","loveReact","removeLoveReact","makeComment","text","deletepost","postid","Authorization","newData","filter","currentPost","setCurrentPost","maxWidth","margin","display","justifyContent","borderBottom","width","height","borderRadius","name","color","fontFamily","paddingLeft","paddingTop","cursor","postedBy","float","title","photo","favourite","includes","length","likes","comments","record","fontWeight","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React,{useEffect,useState,useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nconst Profile=()=>{\r\n    const [userProfile,setProfile]=useState(null)\r\n    const {state,dispatch}=useContext(UserContext)\r\n    const {userid}=useParams()\r\n    console.log(userid)\r\n    useEffect(()=>{\r\n        fetch(`/user/${userid}`,{\r\n            headers:{\r\n                \"Authorization\":\"token \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            setProfile(result)\r\n        })\r\n    },[])\r\n\r\n    const likePost=(id)=>{\r\n        fetch('/like',{\r\n            method: \"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"token \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            //result means the updated post\r\n            const newdata=userProfile.posts.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            //newdata means the entire updated array consisting of all the posts of every user in the home page.\r\n            setProfile(newdata)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    const unlikePost=(id)=>{\r\n        fetch('/unlike',{\r\n            method: \"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"token \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            // console.log(\"result: \"+JSON.stringify(result))\r\n            // console.log(\"item: \"+JSON.stringify(data[0]))\r\n            const newdata=userProfile.posts.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            //newdata means the entire updated array consisting of all the posts of every user in the home page.\r\n            setProfile(newdata)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const loveReact=(id)=>{\r\n        fetch('/fav',{\r\n            method: \"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"token \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            //result means the updated post\r\n            const newdata=userProfile.posts.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            //newdata means the entire updated array consisting of all the posts of every user in the home page.\r\n            setProfile(newdata)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const removeLoveReact=(id)=>{\r\n        fetch('/removefav',{\r\n            method: \"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"token \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            // console.log(\"result: \"+JSON.stringify(result))\r\n            // console.log(\"item: \"+JSON.stringify(data[0]))\r\n            const newdata=userProfile.posts.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            //newdata means the entire updated array consisting of all the posts of every user in the home page.\r\n            setProfile(newdata)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const makeComment=(text,postId)=>{\r\n        fetch('/comment',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"token \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId,\r\n                text\r\n            })\r\n        })\r\n        .then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            const newdata=userProfile.posts.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            setProfile(newdata)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const deletepost=(postid)=>{\r\n        fetch('/deletepost/'+postid,{\r\n            method: \"delete\",\r\n            headers: {\r\n                Authorization: \"token \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)//Printing the deleted post in the console.\r\n            const newData=userProfile.filter(item=>{\r\n                return item._id!=result._id\r\n            })\r\n            setProfile(newData)\r\n        })\r\n    }\r\n    const [currentPost,setCurrentPost]=useState(\"\")\r\n    return (\r\n        <>\r\n        {!userProfile?<h1>Loading...</h1>\r\n        :\r\n        <div style={{\r\n            maxWidth: \"550px\", margin: \"0px auto\"\r\n        }}>\r\n            <div style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-around\",\r\n                margin: \"18px 0px\",\r\n                borderBottom: \"1px solid grey\"\r\n            }}>\r\n                <div>\r\n                    <img style={{width: \"160px\", height: \"160px\", borderRadius: \"80px\"}}\r\n                    src=\"https://images.unsplash.com/photo-1609439408825-b2a24e29871f?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=334&q=80\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <h4>{state?state.name:\"loading...\"}</h4>\r\n                    <div style={{display: \"flex\", justifyContent: \"space-between\", width:\"108%\"}}>\r\n                        <h6>{} posts</h6>\r\n                        <h6>0 followers</h6>\r\n                        <h6>0 followings</h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"gallery\">\r\n                {\r\n                    userProfile.posts.map((item)=>{\r\n                        return (\r\n                            <div>\r\n                                <div key={item._id} className=\"card home-card\">\r\n                                    <h5\r\n                                    style={{color:\"grey\",fontFamily:'cursive',paddingLeft:'20px',paddingTop:'10px',cursor:'pointer'}}>\r\n                                    Posted by {item.postedBy.name}\r\n                                    {/*item.postedBy._id refers to the post id and state._id refers to the user id*/}\r\n                                    {item.postedBy._id==state._id \r\n                                    && <i className=\"material-icons\" style={{float:\"right\",cursor:\"pointer\"}}\r\n                                    onClick={()=>{deletepost(item._id)}}\r\n                                    >delete</i>}\r\n                                    </h5>\r\n                                    <div className=\"card-content\">\r\n                                        <h6>{item.title}</h6>\r\n                                        <p>{item.body}</p>\r\n                                    </div>\r\n                                    <div className=\"card-image card-content\">\r\n                                        <img key={item._id} src={item.photo}/>\r\n                                    </div>\r\n                                    <div className=\"card-content\">\r\n                                        {\r\n                                            item.favourite.includes(state._id)\r\n                                            ?\r\n                                            <i className=\"material-icons\" style={{color: \"red\",cursor:\"pointer\"}} onClick={()=>{removeLoveReact(item._id)}}>favorite</i>\r\n                                            :\r\n                                            <i className=\"material-icons\" style={{color: \"red\",cursor:\"pointer\"}} onClick={()=>{loveReact(item._id)}}>favorite_border</i>\r\n                                        }\r\n                                        <span>{item.favourite.length}    </span>\r\n                                        {\r\n                                            item.likes.includes(state._id)\r\n                                            ?\r\n                                            <i className=\"material-icons\" style={{cursor: 'pointer'}} onClick={()=>{unlikePost(item._id)}}>thumb_up</i>\r\n                                            :\r\n                                            <i className=\"material-icons\" style={{cursor: 'pointer'}} onClick={()=>{likePost(item._id)}}>thumb_up_off_alt</i>\r\n                                        }\r\n                                        <span>{item.likes.length}</span>\r\n                                        {\r\n                                            (item._id==currentPost) \r\n                                            ?\r\n                                            item.comments.map(record=>{\r\n                                                return (\r\n                                                    <h6 key={record._id}><span style={{fontWeight:\"700\"}}>{record.postedBy.name} </span>{record.text}</h6>\r\n                                                )\r\n                                            })\r\n                                            :\r\n                                            <p style={{fontWeight:\"300\"}}>Click on show below to check comments..</p>\r\n                                        }\r\n                                        <form onSubmit={(e)=>{\r\n                                            e.preventDefault()\r\n                                            makeComment(e.target[0].value,item._id)\r\n                                            e.target[0].value=\"\"//I added this line\r\n                                        }}>\r\n                                            <input type=\"text\" placeholder=\"Add a comment\"/>\r\n                                            {\r\n                                                (item._id==currentPost)\r\n                                                ?\r\n                                                <button type=\"button\" class=\"btn btn-primary\" onClick={()=>{setCurrentPost(\"\")}}>Hide</button>\r\n                                                :\r\n                                                <button type=\"button\" class=\"btn btn-primary\" onClick={()=>{setCurrentPost(item._id)}}>Show</button>\r\n                                            }\r\n                                    \r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n        }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile"]},"metadata":{},"sourceType":"module"}