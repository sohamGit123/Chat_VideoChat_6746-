{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Raj\\\\Desktop\\\\Projects\\\\copy\\\\Soham FinalYearProjectWork-master\\\\Frontend\\\\client\\\\src\\\\components\\\\screens\\\\VideoChat.js\",\n    _s = $RefreshSig$();\n\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport Peer from \"simple-peer\";\nimport io from \"socket.io-client\";\nimport '../../App.css';\nconst socket = io.connect('http://localhost:5000');\n\nfunction VideoChat() {\n  _s();\n\n  const [me, setMe] = useState(\"\");\n  const [stream, setStream] = useState();\n  const [receivingCall, setReceivingCall] = useState(false);\n  const [caller, setCaller] = useState(\"\");\n  const [callerSignal, setCallerSignal] = useState();\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [idToCall, setIdToCall] = useState(\"\");\n  const [callEnded, setCallEnded] = useState(false);\n  const [name, setName] = useState(\"\");\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const connectionRef = useRef();\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      setStream(stream);\n      myVideo.current.srcObject = stream;\n    });\n    socket.on(\"me\", id => {\n      setMe(id);\n    });\n    socket.on(\"callUser\", data => {\n      setReceivingCall(true);\n      setCaller(data.from);\n      setName(data.name);\n      setCallerSignal(data.signal);\n    });\n  }, []);\n\n  const callUser = id => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream: stream\n    });\n    peer.on(\"signal\", data => {\n      socket.emit(\"callUser\", {\n        userToCall: id,\n        signalData: data,\n        from: me,\n        name: name\n      });\n    });\n    peer.on(\"stream\", stream => {\n      userVideo.current.srcObject = stream;\n    });\n    socket.on(\"callAccepted\", signal => {\n      setCallAccepted(true);\n      peer.signal(signal);\n    });\n    connectionRef.current = peer;\n  };\n\n  const answerCall = () => {\n    setCallAccepted(true);\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream: stream\n    });\n    peer.on(\"signal\", data => {\n      socket.emit(\"answerCall\", {\n        signal: data,\n        to: caller\n      });\n    });\n    peer.on(\"stream\", stream => {\n      userVideo.current.srcObject = stream;\n    });\n    peer.signal(callerSignal);\n    connectionRef.current = peer;\n  };\n\n  const leaveCall = () => {\n    setCallEnded(true);\n    connectionRef.current.destroy();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"#4776e6\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\",\n          color: 'black'\n        },\n        children: \"Call Your Homies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"video\",\n            children: stream && /*#__PURE__*/_jsxDEV(\"video\", {\n              playsInline: true,\n              muted: true,\n              ref: myVideo,\n              autoPlay: true,\n              style: {\n                width: \"300px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"video\",\n            children: callAccepted && !callEnded ? /*#__PURE__*/_jsxDEV(\"video\", {\n              playsInline: true,\n              ref: userVideo,\n              autoPlay: true,\n              style: {\n                width: \"300px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 25\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"myId\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"filled-basic\",\n            label: \"Name\",\n            variant: \"filled\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            style: {\n              marginBottom: \"20px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n            text: me,\n            style: {\n              marginBottom: \"2rem\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              startIcon: /*#__PURE__*/_jsxDEV(AssignmentIcon, {\n                fontSize: \"large\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 80\n              }, this),\n              children: \"Copy ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"filled-basic\",\n            label: \"ID to call\",\n            variant: \"filled\",\n            value: idToCall,\n            onChange: e => setIdToCall(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"call-button\",\n            children: [callAccepted && !callEnded ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"secondary\",\n              onClick: leaveCall,\n              children: \"End Call\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(IconButton, {\n              color: \"primary\",\n              \"aria-label\": \"call\",\n              onClick: () => callUser(idToCall),\n              children: /*#__PURE__*/_jsxDEV(PhoneIcon, {\n                fontSize: \"large\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 29\n            }, this), idToCall]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: receivingCall && !callAccepted ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"caller\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [name, \" is calling...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: answerCall,\n              children: \"Answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 29\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(VideoChat, \"IZiDfJs3A1DnCF4TRJaTts67PTs=\");\n\n_c = VideoChat;\nexport default VideoChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoChat\");","map":{"version":3,"sources":["C:/Users/Raj/Desktop/Projects/copy/Soham FinalYearProjectWork-master/Frontend/client/src/components/screens/VideoChat.js"],"names":["Button","IconButton","TextField","AssignmentIcon","PhoneIcon","React","useEffect","useRef","useState","CopyToClipboard","Peer","io","socket","connect","VideoChat","me","setMe","stream","setStream","receivingCall","setReceivingCall","caller","setCaller","callerSignal","setCallerSignal","callAccepted","setCallAccepted","idToCall","setIdToCall","callEnded","setCallEnded","name","setName","myVideo","userVideo","connectionRef","navigator","mediaDevices","getUserMedia","video","audio","then","current","srcObject","on","id","data","from","signal","callUser","peer","initiator","trickle","emit","userToCall","signalData","answerCall","to","leaveCall","destroy","backgroundColor","textAlign","color","width","e","target","value","marginBottom"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAO,eAAP;AAGA,MAAMC,MAAM,GAAGD,EAAE,CAACE,OAAH,CAAW,uBAAX,CAAf;;AACA,SAASC,SAAT,GAAqB;AAAA;;AACpB,QAAM,CAAEC,EAAF,EAAMC,KAAN,IAAgBR,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAAES,MAAF,EAAUC,SAAV,IAAwBV,QAAQ,EAAtC;AACA,QAAM,CAAEW,aAAF,EAAiBC,gBAAjB,IAAsCZ,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAAEa,MAAF,EAAUC,SAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAEe,YAAF,EAAgBC,eAAhB,IAAoChB,QAAQ,EAAlD;AACA,QAAM,CAAEiB,YAAF,EAAgBC,eAAhB,IAAoClB,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAAEmB,QAAF,EAAYC,WAAZ,IAA4BpB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAEqB,SAAF,EAAaC,YAAb,IAA6BtB,QAAQ,CAAC,KAAD,CAA3C;AACA,QAAM,CAAEuB,IAAF,EAAQC,OAAR,IAAoBxB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMyB,OAAO,GAAG1B,MAAM,EAAtB;AACA,QAAM2B,SAAS,GAAG3B,MAAM,EAAxB;AACA,QAAM4B,aAAa,GAAE5B,MAAM,EAA3B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACf8B,IAAAA,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;AAAEC,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,KAAK,EAAE;AAAtB,KAApC,EAAkEC,IAAlE,CAAwExB,MAAD,IAAY;AAClFC,MAAAA,SAAS,CAACD,MAAD,CAAT;AACCgB,MAAAA,OAAO,CAACS,OAAR,CAAgBC,SAAhB,GAA4B1B,MAA5B;AACD,KAHD;AAKDL,IAAAA,MAAM,CAACgC,EAAP,CAAU,IAAV,EAAiBC,EAAD,IAAQ;AACtB7B,MAAAA,KAAK,CAAC6B,EAAD,CAAL;AACA,KAFF;AAICjC,IAAAA,MAAM,CAACgC,EAAP,CAAU,UAAV,EAAuBE,IAAD,IAAU;AAC/B1B,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAE,MAAAA,SAAS,CAACwB,IAAI,CAACC,IAAN,CAAT;AACAf,MAAAA,OAAO,CAACc,IAAI,CAACf,IAAN,CAAP;AACAP,MAAAA,eAAe,CAACsB,IAAI,CAACE,MAAN,CAAf;AACA,KALD;AAMA,GAhBQ,EAgBN,EAhBM,CAAT;;AAkBA,QAAMC,QAAQ,GAAIJ,EAAD,IAAQ;AACxB,UAAMK,IAAI,GAAG,IAAIxC,IAAJ,CAAS;AACrByC,MAAAA,SAAS,EAAE,IADU;AAErBC,MAAAA,OAAO,EAAE,KAFY;AAGrBnC,MAAAA,MAAM,EAAEA;AAHa,KAAT,CAAb;AAKAiC,IAAAA,IAAI,CAACN,EAAL,CAAQ,QAAR,EAAmBE,IAAD,IAAU;AAC3BlC,MAAAA,MAAM,CAACyC,IAAP,CAAY,UAAZ,EAAwB;AACvBC,QAAAA,UAAU,EAAET,EADW;AAEvBU,QAAAA,UAAU,EAAET,IAFW;AAGvBC,QAAAA,IAAI,EAAEhC,EAHiB;AAIvBgB,QAAAA,IAAI,EAAEA;AAJiB,OAAxB;AAMA,KAPD;AAQAmB,IAAAA,IAAI,CAACN,EAAL,CAAQ,QAAR,EAAmB3B,MAAD,IAAY;AAE5BiB,MAAAA,SAAS,CAACQ,OAAV,CAAkBC,SAAlB,GAA8B1B,MAA9B;AAED,KAJD;AAKAL,IAAAA,MAAM,CAACgC,EAAP,CAAU,cAAV,EAA2BI,MAAD,IAAY;AACrCtB,MAAAA,eAAe,CAAC,IAAD,CAAf;AACAwB,MAAAA,IAAI,CAACF,MAAL,CAAYA,MAAZ;AACA,KAHD;AAKAb,IAAAA,aAAa,CAACO,OAAd,GAAwBQ,IAAxB;AACA,GAzBD;;AA2BA,QAAMM,UAAU,GAAE,MAAO;AACxB9B,IAAAA,eAAe,CAAC,IAAD,CAAf;AACA,UAAMwB,IAAI,GAAG,IAAIxC,IAAJ,CAAS;AACrByC,MAAAA,SAAS,EAAE,KADU;AAErBC,MAAAA,OAAO,EAAE,KAFY;AAGrBnC,MAAAA,MAAM,EAAEA;AAHa,KAAT,CAAb;AAKAiC,IAAAA,IAAI,CAACN,EAAL,CAAQ,QAAR,EAAmBE,IAAD,IAAU;AAC3BlC,MAAAA,MAAM,CAACyC,IAAP,CAAY,YAAZ,EAA0B;AAAEL,QAAAA,MAAM,EAAEF,IAAV;AAAgBW,QAAAA,EAAE,EAAEpC;AAApB,OAA1B;AACA,KAFD;AAGA6B,IAAAA,IAAI,CAACN,EAAL,CAAQ,QAAR,EAAmB3B,MAAD,IAAY;AAC7BiB,MAAAA,SAAS,CAACQ,OAAV,CAAkBC,SAAlB,GAA8B1B,MAA9B;AACA,KAFD;AAIAiC,IAAAA,IAAI,CAACF,MAAL,CAAYzB,YAAZ;AACAY,IAAAA,aAAa,CAACO,OAAd,GAAwBQ,IAAxB;AACA,GAhBD;;AAkBA,QAAMQ,SAAS,GAAG,MAAM;AACvB5B,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAK,IAAAA,aAAa,CAACO,OAAd,CAAsBiB,OAAtB;AACA,GAHD;;AAKA,sBACC;AAAA,2BACM;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAC;AAAjB,OAAZ;AAAA,8BACI;AAAI,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE,QAAb;AAAuBC,UAAAA,KAAK,EAAE;AAA9B,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,sBACK7C,MAAM,iBAAK;AAAO,cAAA,WAAW,MAAlB;AAAmB,cAAA,KAAK,MAAxB;AAAyB,cAAA,GAAG,EAAEgB,OAA9B;AAAuC,cAAA,QAAQ,MAA/C;AAAgD,cAAA,KAAK,EAAE;AAAE8B,gBAAAA,KAAK,EAAE;AAAT;AAAvD;AAAA;AAAA;AAAA;AAAA;AADhB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,sBACKtC,YAAY,IAAI,CAACI,SAAjB,gBACD;AAAO,cAAA,WAAW,MAAlB;AAAmB,cAAA,GAAG,EAAEK,SAAxB;AAAmC,cAAA,QAAQ,MAA3C;AAA4C,cAAA,KAAK,EAAE;AAAE6B,gBAAAA,KAAK,EAAE;AAAT;AAAnD;AAAA;AAAA;AAAA;AAAA,oBADC,GAED;AAHJ;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAWI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACI,QAAC,SAAD;AACI,YAAA,EAAE,EAAC,cADP;AAEI,YAAA,KAAK,EAAC,MAFV;AAGI,YAAA,OAAO,EAAC,QAHZ;AAII,YAAA,KAAK,EAAEhC,IAJX;AAKI,YAAA,QAAQ,EAAGiC,CAAD,IAAOhC,OAAO,CAACgC,CAAC,CAACC,MAAF,CAASC,KAAV,CAL5B;AAMI,YAAA,KAAK,EAAE;AAAEC,cAAAA,YAAY,EAAE;AAAhB;AANX;AAAA;AAAA;AAAA;AAAA,kBADJ,eASI,QAAC,eAAD;AAAiB,YAAA,IAAI,EAAEpD,EAAvB;AAA2B,YAAA,KAAK,EAAE;AAAEoD,cAAAA,YAAY,EAAE;AAAhB,aAAlC;AAAA,mCACI,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,WAAhB;AAA4B,cAAA,KAAK,EAAC,SAAlC;AAA4C,cAAA,SAAS,eAAE,QAAC,cAAD;AAAgB,gBAAA,QAAQ,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,sBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBATJ,eAeI,QAAC,SAAD;AACI,YAAA,EAAE,EAAC,cADP;AAEI,YAAA,KAAK,EAAC,YAFV;AAGI,YAAA,OAAO,EAAC,QAHZ;AAII,YAAA,KAAK,EAAExC,QAJX;AAKI,YAAA,QAAQ,EAAGqC,CAAD,IAAOpC,WAAW,CAACoC,CAAC,CAACC,MAAF,CAASC,KAAV;AALhC;AAAA;AAAA;AAAA;AAAA,kBAfJ,eAsBI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,uBACKzC,YAAY,IAAI,CAACI,SAAjB,gBACG,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,WAAhB;AAA4B,cAAA,KAAK,EAAC,WAAlC;AAA8C,cAAA,OAAO,EAAE6B,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADH,gBAKG,QAAC,UAAD;AAAY,cAAA,KAAK,EAAC,SAAlB;AAA4B,4BAAW,MAAvC;AAA8C,cAAA,OAAO,EAAE,MAAMT,QAAQ,CAACtB,QAAD,CAArE;AAAA,qCACI,QAAC,SAAD;AAAW,gBAAA,QAAQ,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBANR,EAUKA,QAVL;AAAA;AAAA;AAAA;AAAA;AAAA,kBAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ,eA8CI;AAAA,oBACKR,aAAa,IAAI,CAACM,YAAlB,gBACO;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA,oCACA;AAAA,yBAAMM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,WAAhB;AAA4B,cAAA,KAAK,EAAC,SAAlC;AAA4C,cAAA,OAAO,EAAEyB,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADP,GAOG;AARR;AAAA;AAAA;AAAA;AAAA,gBA9CJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADN,mBADD;AAgEA;;GAlJQ1C,S;;KAAAA,S;AAoJT,eAAeA,SAAf","sourcesContent":["import Button from \"@material-ui/core/Button\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\"\r\nimport PhoneIcon from \"@material-ui/icons/Phone\"\r\nimport React, { useEffect, useRef, useState } from \"react\"\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\"\r\nimport Peer from \"simple-peer\"\r\nimport io from \"socket.io-client\"\r\nimport '../../App.css'\r\n\r\n\r\nconst socket = io.connect('http://localhost:5000')\r\nfunction VideoChat() {\r\n\tconst [ me, setMe ] = useState(\"\")\r\n\tconst [ stream, setStream ] = useState()\r\n\tconst [ receivingCall, setReceivingCall ] = useState(false)\r\n\tconst [ caller, setCaller ] = useState(\"\")\r\n\tconst [ callerSignal, setCallerSignal ] = useState()\r\n\tconst [ callAccepted, setCallAccepted ] = useState(false)\r\n\tconst [ idToCall, setIdToCall ] = useState(\"\")\r\n\tconst [ callEnded, setCallEnded] = useState(false)\r\n\tconst [ name, setName ] = useState(\"\")\r\n\tconst myVideo = useRef()\r\n\tconst userVideo = useRef()\r\n\tconst connectionRef= useRef()\r\n\r\n\tuseEffect(() => {\r\n\t\tnavigator.mediaDevices.getUserMedia({ video: true, audio: true }).then((stream) => {\r\n\t\t\tsetStream(stream)\r\n\t\t\t\tmyVideo.current.srcObject = stream\r\n\t\t})\r\n\r\n\tsocket.on(\"me\", (id) => {\r\n\t\t\tsetMe(id)\r\n\t\t})\r\n\r\n\t\tsocket.on(\"callUser\", (data) => {\r\n\t\t\tsetReceivingCall(true)\r\n\t\t\tsetCaller(data.from)\r\n\t\t\tsetName(data.name)\r\n\t\t\tsetCallerSignal(data.signal)\r\n\t\t})\r\n\t}, [])\r\n\r\n\tconst callUser = (id) => {\r\n\t\tconst peer = new Peer({\r\n\t\t\tinitiator: true,\r\n\t\t\ttrickle: false,\r\n\t\t\tstream: stream\r\n\t\t})\r\n\t\tpeer.on(\"signal\", (data) => {\r\n\t\t\tsocket.emit(\"callUser\", {\r\n\t\t\t\tuserToCall: id,\r\n\t\t\t\tsignalData: data,\r\n\t\t\t\tfrom: me,\r\n\t\t\t\tname: name\r\n\t\t\t})\r\n\t\t})\r\n\t\tpeer.on(\"stream\", (stream) => {\r\n\t\t\t\r\n\t\t\t\tuserVideo.current.srcObject = stream\r\n\t\t\t\r\n\t\t})\r\n\t\tsocket.on(\"callAccepted\", (signal) => {\r\n\t\t\tsetCallAccepted(true)\r\n\t\t\tpeer.signal(signal)\r\n\t\t})\r\n\r\n\t\tconnectionRef.current = peer\r\n\t}\r\n\r\n\tconst answerCall =() =>  {\r\n\t\tsetCallAccepted(true)\r\n\t\tconst peer = new Peer({\r\n\t\t\tinitiator: false,\r\n\t\t\ttrickle: false,\r\n\t\t\tstream: stream\r\n\t\t})\r\n\t\tpeer.on(\"signal\", (data) => {\r\n\t\t\tsocket.emit(\"answerCall\", { signal: data, to: caller })\r\n\t\t})\r\n\t\tpeer.on(\"stream\", (stream) => {\r\n\t\t\tuserVideo.current.srcObject = stream\r\n\t\t})\r\n\r\n\t\tpeer.signal(callerSignal)\r\n\t\tconnectionRef.current = peer\r\n\t}\r\n\r\n\tconst leaveCall = () => {\r\n\t\tsetCallEnded(true)\r\n\t\tconnectionRef.current.destroy()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n        <div style={{backgroundColor:\"#4776e6\"}}>\r\n            <h1 style={{ textAlign: \"center\", color: 'black' }}>Call Your Homies</h1>\r\n            <div className=\"container\">\r\n                <div className=\"video-container\">\r\n                    <div className=\"video\">\r\n                        {stream &&  <video playsInline muted ref={myVideo} autoPlay style={{ width: \"300px\" }} />}\r\n                    </div>\r\n                    <div className=\"video\">\r\n                        {callAccepted && !callEnded ?\r\n                        <video playsInline ref={userVideo} autoPlay style={{ width: \"300px\"}} />:\r\n                        null}\r\n                    </div>\r\n                </div>\r\n                <div className=\"myId\">\r\n                    <TextField\r\n                        id=\"filled-basic\"\r\n                        label=\"Name\"\r\n                        variant=\"filled\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        style={{ marginBottom: \"20px\" }}\r\n                    />\r\n                    <CopyToClipboard text={me} style={{ marginBottom: \"2rem\" }}>\r\n                        <Button variant=\"contained\" color=\"primary\" startIcon={<AssignmentIcon fontSize=\"large\" />}>\r\n                            Copy ID\r\n                        </Button>\r\n                    </CopyToClipboard>\r\n\r\n                    <TextField\r\n                        id=\"filled-basic\"\r\n                        label=\"ID to call\"\r\n                        variant=\"filled\"\r\n                        value={idToCall}\r\n                        onChange={(e) => setIdToCall(e.target.value)}\r\n                    />\r\n                    <div className=\"call-button\">\r\n                        {callAccepted && !callEnded ? (\r\n                            <Button variant=\"contained\" color=\"secondary\" onClick={leaveCall}>\r\n                                End Call\r\n                            </Button>\r\n                        ) : (\r\n                            <IconButton color=\"primary\" aria-label=\"call\" onClick={() => callUser(idToCall)}>\r\n                                <PhoneIcon fontSize=\"large\" />\r\n                            </IconButton>\r\n                        )}\r\n                        {idToCall}\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    {receivingCall && !callAccepted ? (\r\n                            <div className=\"caller\">\r\n                            <h1 >{name} is calling...</h1>\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={answerCall}>\r\n                                Answer\r\n                            </Button>\r\n                        </div>\r\n                    ) : null}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default VideoChat\r\n"]},"metadata":{},"sourceType":"module"}