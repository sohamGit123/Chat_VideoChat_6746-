{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Raj\\\\Desktop\\\\Social Networking\\\\Frontend\\\\client\\\\src\\\\components\\\\screens\\\\CreatePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport M from 'materialize-css';\nimport { useHistory } from 'react-router-dom';\n\nconst CreatePost = () => {\n  _s();\n\n  const history = useHistory();\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  useEffect(() => {\n    if (url == \"empty\") {\n      fetch(\"/createpost\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\n        },\n        body: JSON.stringify({\n          title,\n          body\n        })\n      }).then(res => res.json()).then(data => {\n        console.log(data);\n\n        if (data.error) {\n          M.toast({\n            html: data.error,\n            classes: \"#c62828 red darken-3\"\n          });\n        } else {\n          M.toast({\n            html: \"Posted successfully\",\n            classes: \"#43a047 green darken-1\"\n          });\n          history.push('/');\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    } else if (url) {\n      fetch(\"/createpost\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\n        },\n        body: JSON.stringify({\n          title,\n          body,\n          pic: url\n        })\n      }).then(res => res.json()).then(data => {\n        console.log(data);\n\n        if (data.error) {\n          M.toast({\n            html: data.error,\n            classes: \"#c62828 red darken-3\"\n          });\n        } else {\n          M.toast({\n            html: \"Posted successfully\",\n            classes: \"#43a047 green darken-1\"\n          });\n          history.push('/');\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }, [url]);\n\n  const postDetails = () => {\n    if (!image) {\n      console.log(\"Upload an image\");\n      setUrl(\"empty\");\n    } else {\n      const data = new FormData();\n      data.append(\"file\", image);\n      data.append(\"upload_preset\", \"explore-app\");\n      data.append(\"cloud_name\", \"codersneverquit\");\n      fetch(\"https://api.cloudinary.com/v1_1/codersneverquit/image/upload\", {\n        method: \"post\",\n        body: data\n      }).then(res => res.json()).then(data => {\n        setUrl(data.url);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card input-filed\",\n    style: {\n      margin: \"10px auto\",\n      maxWidth: \"500px\",\n      padding: \"20px\",\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"title\",\n      onChange: event => setTitle(event.target.value),\n      value: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"body\",\n      value: body,\n      onChange: event => setBody(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-field input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn waves-effect waves-light\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Upload Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: event => setImage(event.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-path-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"file-path validate\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn waves-effect waves-light\",\n      onClick: () => postDetails(),\n      children: \"Submit post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 8\n  }, this);\n};\n\n_s(CreatePost, \"sIk3Rn9tdgwWPmMARu2cYdN4EE0=\", false, function () {\n  return [useHistory];\n});\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["C:/Users/Raj/Desktop/Social Networking/Frontend/client/src/components/screens/CreatePost.js"],"names":["React","useState","useEffect","M","useHistory","CreatePost","history","title","setTitle","body","setBody","image","setImage","url","setUrl","fetch","method","headers","localStorage","getItem","JSON","stringify","then","res","json","data","console","log","error","toast","html","classes","push","catch","err","pic","postDetails","FormData","append","margin","maxWidth","padding","textAlign","event","target","value","files"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,CAAP,MAAc,iBAAd;AACA,SAAQC,UAAR,QAAyB,kBAAzB;;AACA,MAAMC,UAAU,GAAG,MAAI;AAAA;;AACnB,QAAMC,OAAO,GAACF,UAAU,EAAxB;AACA,QAAM,CAACG,KAAD,EAAOC,QAAP,IAAiBP,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACQ,IAAD,EAAMC,OAAN,IAAeT,QAAQ,CAAC,EAAD,CAA7B;AACA,QAAM,CAACU,KAAD,EAAOC,QAAP,IAAiBX,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACY,GAAD,EAAKC,MAAL,IAAab,QAAQ,CAAC,EAAD,CAA3B;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGW,GAAG,IAAE,OAAR,EAAgB;AACZE,MAAAA,KAAK,CAAC,aAAD,EAAe;AAChBC,QAAAA,MAAM,EAAE,MADQ;AAEhBC,QAAAA,OAAO,EAAE;AACL,0BAAe,kBADV;AAEL,2BAAgB,WAASC,YAAY,CAACC,OAAb,CAAqB,KAArB;AAFpB,SAFO;AAMhBV,QAAAA,IAAI,EAAEW,IAAI,CAACC,SAAL,CAAe;AACjBd,UAAAA,KADiB;AAEjBE,UAAAA;AAFiB,SAAf;AANU,OAAf,CAAL,CAUGa,IAVH,CAUQC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAVb,EAWCF,IAXD,CAWMG,IAAI,IAAE;AACRC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,YAAGA,IAAI,CAACG,KAAR,EAAc;AACVzB,UAAAA,CAAC,CAAC0B,KAAF,CAAQ;AAACC,YAAAA,IAAI,EAAEL,IAAI,CAACG,KAAZ;AAAkBG,YAAAA,OAAO,EAAC;AAA1B,WAAR;AACH,SAFD,MAGI;AACA5B,UAAAA,CAAC,CAAC0B,KAAF,CAAQ;AAACC,YAAAA,IAAI,EAAC,qBAAN;AAA4BC,YAAAA,OAAO,EAAC;AAApC,WAAR;AACAzB,UAAAA,OAAO,CAAC0B,IAAR,CAAa,GAAb;AACH;AACJ,OApBD,EAqBCC,KArBD,CAqBOC,GAAG,IAAE;AACRR,QAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACH,OAvBD;AAwBH,KAzBD,MA0BK,IAAGrB,GAAH,EAAO;AACRE,MAAAA,KAAK,CAAC,aAAD,EAAe;AAChBC,QAAAA,MAAM,EAAE,MADQ;AAEhBC,QAAAA,OAAO,EAAE;AACL,0BAAe,kBADV;AAEL,2BAAgB,WAASC,YAAY,CAACC,OAAb,CAAqB,KAArB;AAFpB,SAFO;AAMhBV,QAAAA,IAAI,EAAEW,IAAI,CAACC,SAAL,CAAe;AACjBd,UAAAA,KADiB;AAEjBE,UAAAA,IAFiB;AAGjB0B,UAAAA,GAAG,EAAEtB;AAHY,SAAf;AANU,OAAf,CAAL,CAWGS,IAXH,CAWQC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAXb,EAYCF,IAZD,CAYMG,IAAI,IAAE;AACRC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,YAAGA,IAAI,CAACG,KAAR,EAAc;AACVzB,UAAAA,CAAC,CAAC0B,KAAF,CAAQ;AAACC,YAAAA,IAAI,EAAEL,IAAI,CAACG,KAAZ;AAAkBG,YAAAA,OAAO,EAAC;AAA1B,WAAR;AACH,SAFD,MAGI;AACA5B,UAAAA,CAAC,CAAC0B,KAAF,CAAQ;AAACC,YAAAA,IAAI,EAAC,qBAAN;AAA4BC,YAAAA,OAAO,EAAC;AAApC,WAAR;AACAzB,UAAAA,OAAO,CAAC0B,IAAR,CAAa,GAAb;AACH;AACJ,OArBD,EAsBCC,KAtBD,CAsBOC,GAAG,IAAE;AACRR,QAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACH,OAxBD;AAyBH;AACJ,GAtDQ,EAsDP,CAACrB,GAAD,CAtDO,CAAT;;AAwDA,QAAMuB,WAAW,GAAC,MAAI;AAClB,QAAG,CAACzB,KAAJ,EAAU;AACNe,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAb,MAAAA,MAAM,CAAC,OAAD,CAAN;AACH,KAHD,MAII;AACA,YAAMW,IAAI,GAAC,IAAIY,QAAJ,EAAX;AACAZ,MAAAA,IAAI,CAACa,MAAL,CAAY,MAAZ,EAAmB3B,KAAnB;AACAc,MAAAA,IAAI,CAACa,MAAL,CAAY,eAAZ,EAA4B,aAA5B;AACAb,MAAAA,IAAI,CAACa,MAAL,CAAY,YAAZ,EAAyB,iBAAzB;AACAvB,MAAAA,KAAK,CAAC,8DAAD,EAAgE;AACjEC,QAAAA,MAAM,EAAE,MADyD;AAEjEP,QAAAA,IAAI,EAAEgB;AAF2D,OAAhE,CAAL,CAICH,IAJD,CAIMC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAJX,EAKCF,IALD,CAKMG,IAAI,IAAE;AACRX,QAAAA,MAAM,CAACW,IAAI,CAACZ,GAAN,CAAN;AACH,OAPD,EAQCoB,KARD,CAQOC,GAAG,IAAE;AACRR,QAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACH,OAVD;AAWH;AACJ,GAtBD;;AAwBD,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AACA,IAAA,KAAK,EAAE;AACHK,MAAAA,MAAM,EAAC,WADJ;AAEHC,MAAAA,QAAQ,EAAC,OAFN;AAGHC,MAAAA,OAAO,EAAC,MAHL;AAIHC,MAAAA,SAAS,EAAC;AAJP,KADP;AAAA,4BAOI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,OAA/B;AACA,MAAA,QAAQ,EAAGC,KAAD,IAASnC,QAAQ,CAACmC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAD3B;AAEA,MAAA,KAAK,EAAEtC;AAFP;AAAA;AAAA;AAAA;AAAA,YAPJ,eAWI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,MAA/B;AACA,MAAA,KAAK,EAAEE,IADP;AAEA,MAAA,QAAQ,EAAGkC,KAAD,IAASjC,OAAO,CAACiC,KAAK,CAACC,MAAN,CAAaC,KAAd;AAF1B;AAAA;AAAA;AAAA;AAAA,YAXJ,eAeI;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC,8BAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AACA,UAAA,QAAQ,EAAGF,KAAD,IAAS/B,QAAQ,CAAC+B,KAAK,CAACC,MAAN,CAAaE,KAAb,CAAmB,CAAnB,CAAD;AAD3B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAOC;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,+BACI;AAAO,UAAA,SAAS,EAAC,oBAAjB;AAAsC,UAAA,IAAI,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPD;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ,eA2BK;AAAQ,MAAA,SAAS,EAAC,8BAAlB;AACA,MAAA,OAAO,EAAE,MAAIV,WAAW,EADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA3BL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoCF,CA3HD;;GAAM/B,U;UACYD,U;;;KADZC,U;AA6HN,eAAeA,UAAf","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport M from 'materialize-css'\r\nimport {useHistory} from 'react-router-dom'\r\nconst CreatePost = ()=>{\r\n    const history=useHistory()\r\n    const [title,setTitle]=useState(\"\")\r\n    const [body,setBody]=useState(\"\")\r\n    const [image,setImage]=useState(\"\")\r\n    const [url,setUrl]=useState(\"\")\r\n\r\n    useEffect(()=>{\r\n        if(url==\"empty\"){\r\n            fetch(\"/createpost\",{\r\n                method: \"post\",\r\n                headers: {\r\n                    \"Content-Type\":\"application/json\",\r\n                    \"Authorization\":\"token \"+localStorage.getItem(\"jwt\")\r\n                },\r\n                body: JSON.stringify({\r\n                    title,\r\n                    body\r\n                })\r\n            }).then(res=>res.json())\r\n            .then(data=>{\r\n                console.log(data)\r\n                if(data.error){\r\n                    M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n                }\r\n                else{\r\n                    M.toast({html:\"Posted successfully\",classes:\"#43a047 green darken-1\"})\r\n                    history.push('/')\r\n                }\r\n            })\r\n            .catch(err=>{\r\n                console.log(err)\r\n            })\r\n        }\r\n        else if(url){\r\n            fetch(\"/createpost\",{\r\n                method: \"post\",\r\n                headers: {\r\n                    \"Content-Type\":\"application/json\",\r\n                    \"Authorization\":\"token \"+localStorage.getItem(\"jwt\")\r\n                },\r\n                body: JSON.stringify({\r\n                    title,\r\n                    body,\r\n                    pic: url\r\n                })\r\n            }).then(res=>res.json())\r\n            .then(data=>{\r\n                console.log(data)\r\n                if(data.error){\r\n                    M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n                }\r\n                else{\r\n                    M.toast({html:\"Posted successfully\",classes:\"#43a047 green darken-1\"})\r\n                    history.push('/')\r\n                }\r\n            })\r\n            .catch(err=>{\r\n                console.log(err)\r\n            })\r\n        }\r\n    },[url])\r\n\r\n    const postDetails=()=>{\r\n        if(!image){\r\n            console.log(\"Upload an image\")\r\n            setUrl(\"empty\")\r\n        }\r\n        else{\r\n            const data=new FormData()\r\n            data.append(\"file\",image)\r\n            data.append(\"upload_preset\",\"explore-app\")\r\n            data.append(\"cloud_name\",\"codersneverquit\")\r\n            fetch(\"https://api.cloudinary.com/v1_1/codersneverquit/image/upload\",{\r\n                method: \"post\",\r\n                body: data\r\n            })\r\n            .then(res=>res.json())\r\n            .then(data=>{\r\n                setUrl(data.url)\r\n            })\r\n            .catch(err=>{\r\n                console.log(err)\r\n            })\r\n        }\r\n    }\r\n\r\n   return(\r\n       <div className=\"card input-filed\"\r\n       style={{\r\n           margin:\"10px auto\",\r\n           maxWidth:\"500px\",\r\n           padding:\"20px\",\r\n           textAlign:\"center\"\r\n       }}>\r\n           <input type=\"text\" placeholder=\"title\" \r\n           onChange={(event)=>setTitle(event.target.value)}\r\n           value={title}\r\n           />\r\n           <input type=\"text\" placeholder=\"body\"\r\n           value={body}\r\n           onChange={(event)=>setBody(event.target.value)}\r\n           />\r\n           <div className=\"file-field input-field\">\r\n            <div className=\"btn waves-effect waves-light\">\r\n                <span>Upload Image</span>\r\n                <input type=\"file\" \r\n                onChange={(event)=>setImage(event.target.files[0])}\r\n                />\r\n            </div>\r\n            <div className=\"file-path-wrapper\">\r\n                <input className=\"file-path validate\" type=\"text\" />\r\n            </div>\r\n            </div>\r\n\r\n            <button className=\"btn waves-effect waves-light\"\r\n            onClick={()=>postDetails()}\r\n            >\r\n                Submit post\r\n            </button>\r\n\r\n       </div>\r\n   )\r\n}\r\n\r\nexport default CreatePost"]},"metadata":{},"sourceType":"module"}