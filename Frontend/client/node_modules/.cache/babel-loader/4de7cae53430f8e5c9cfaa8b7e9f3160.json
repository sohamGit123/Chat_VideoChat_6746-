{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Raj\\\\Desktop\\\\FinalYearProjectWork-master-manjari's Part\\\\FinalYearProjectWork-master\\\\Frontend\\\\client\\\\src\\\\components\\\\screens\\\\Messenger.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Messenger.css';\nimport Conversations from '../Conversations/Conversations';\nimport Message from '../Message/Message';\nimport ChatOnline from '../ChatOnline/ChatOnline';\nimport { UserContext } from '../../App';\nimport { useContext, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { io } from 'socket.io-client';\n\nconst Messenger = () => {\n  _s();\n\n  const [conversations, setConversation] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [messages, setMessage] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const socket = useRef();\n  const scrollRef = useRef();\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext);\n  console.log(\"state in messenger becomes: \" + JSON.stringify(state));\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:8900\");\n    socket.current.on(\"getMessage\", data => {\n      setArrivalMessage({\n        sender: data.senderId,\n        text: data.text,\n        createdAt: Date.now()\n      });\n    });\n  }, []);\n  useEffect(() => {\n    const getConversations = async () => {\n      try {\n        const res = await axios.get(\"/conversations/\" + state._id);\n        setConversation(res.data); //console.log(state._id)\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getConversations();\n  }, [state]);\n  /*const {user}=useContext(UserContext)\n  console.log(JSON.stringify(user))*/\n\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const res = await axios.get(\"/messages/\" + (currentChat === null || currentChat === void 0 ? void 0 : currentChat._id));\n        setMessage(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getMessages();\n  }, [currentChat]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const message = {\n      sender: state._id,\n      text: newMessage,\n      conversationId: currentChat._id\n    };\n    const receiverId = currentChat.members.find(member => member !== state._id);\n    socket.current.emit(\"sendMessage\", {\n      senderId: state._id,\n      receiverId,\n      text: newMessage\n    });\n\n    try {\n      const res = await axios.post(\"/messages\", message);\n      setMessage([...messages, res.data]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    var _scrollRef$current;\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  useEffect(() => {\n    socket.current.emit(\"addUser\", state === null || state === void 0 ? void 0 : state._id);\n    socket.current.on(\"getUsers\", users => {\n      setOnlineUsers(state === null || state === void 0 ? void 0 : state.following.filter(f => users === null || users === void 0 ? void 0 : users.some(u => u.userId === f)));\n    });\n  }, [state]); //Commented for testing purpose\n  // useEffect(()=>{\n  //    socket.current.on(\"getMessage\",data=>{\n  //     setArrivalMessage({\n  //         sender: data.senderId,\n  //         text: data.text,\n  //         createdAt: Date.now(),\n  //     })\n  //    })\n  // },[])\n\n  useEffect(() => {\n    arrivalMessage && (currentChat === null || currentChat === void 0 ? void 0 : currentChat.members.includes(arrivalMessage.sender)) && setMessage(prev => [...prev, arrivalMessage]);\n  }, [arrivalMessage, currentChat]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !state ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"LOADING...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messenger\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatMenu\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatMenuWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Search for friends\",\n            className: \"chatMenuInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 21\n          }, this), conversations.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setCurrentChat(c),\n            children: /*#__PURE__*/_jsxDEV(Conversations, {\n              conversation: c,\n              currentUser: state\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatBox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatBoxWrapper\",\n          children: currentChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxTop\",\n              children: messages.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: scrollRef,\n                children: /*#__PURE__*/_jsxDEV(Message, {\n                  message: m,\n                  own: m.sender === state._id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 29\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxBottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"chatMessageInput\",\n                placeholder: \"write something...\",\n                onChange: e => setNewMessage(e.target.value),\n                value: newMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"chatSubmitButton\",\n                onClick: handleSubmit,\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"noConversationText\",\n            children: \"Open a conversation to start a chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatOnline\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatOnlineWrapper\",\n          children: /*#__PURE__*/_jsxDEV(ChatOnline, {\n            onlineUsers: onlineUsers,\n            currentId: state === null || state === void 0 ? void 0 : state._id,\n            setCurrentChat: setCurrentChat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Messenger, \"WzJyyBaqJSTOrtl1paKtGsY5Qj8=\");\n\n_c = Messenger;\nexport default Messenger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"sources":["C:/Users/Raj/Desktop/FinalYearProjectWork-master-manjari's Part/FinalYearProjectWork-master/Frontend/client/src/components/screens/Messenger.js"],"names":["React","useState","Conversations","Message","ChatOnline","UserContext","useContext","useEffect","useRef","axios","io","Messenger","conversations","setConversation","currentChat","setCurrentChat","messages","setMessage","newMessage","setNewMessage","arrivalMessage","setArrivalMessage","onlineUsers","setOnlineUsers","socket","scrollRef","state","dispatch","console","log","JSON","stringify","current","on","data","sender","senderId","text","createdAt","Date","now","getConversations","res","get","_id","err","getMessages","handleSubmit","e","preventDefault","message","conversationId","receiverId","members","find","member","emit","post","scrollIntoView","behavior","users","following","filter","f","some","u","userId","includes","prev","map","c","m","target","value"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\nimport './Messenger.css'\nimport Conversations from '../Conversations/Conversations'\nimport Message from '../Message/Message'\nimport ChatOnline from '../ChatOnline/ChatOnline'\nimport {UserContext} from '../../App'\nimport {useContext,useEffect,useRef} from 'react'\nimport axios from 'axios'\nimport {io} from 'socket.io-client'\n\nconst Messenger=()=>{\n    const [conversations,setConversation]=useState([])\n    const [currentChat,setCurrentChat]=useState(null)\n    const [messages,setMessage]=useState([])\n    const [newMessage,setNewMessage]=useState(\"\")\n    const [arrivalMessage,setArrivalMessage]=useState(null)\n    const [onlineUsers,setOnlineUsers]=useState([])\n    const socket=useRef()\n\n    const scrollRef=useRef()\n\n    const {state,dispatch}=useContext(UserContext)\n    console.log(\"state in messenger becomes: \"+JSON.stringify(state))\n\n    useEffect(()=>{\n        socket.current=io(\"ws://localhost:8900\");\n        socket.current.on(\"getMessage\", (data) => {\n            setArrivalMessage({\n              sender: data.senderId,\n              text: data.text,\n              createdAt: Date.now(),\n            });\n          });\n    },[]);\n\n    useEffect(()=>{\n\n        const getConversations = async ()=>{\n            try{\n            const res= await axios.get(\"/conversations/\"+state._id)\n            setConversation(res.data)\n            //console.log(state._id)\n            }\n            catch(err)\n            {\n                console.log(err)\n            }\n        }\n        getConversations();\n    },[state])\n    /*const {user}=useContext(UserContext)\n    console.log(JSON.stringify(user))*/\n    useEffect(()=>{\n        const getMessages = async () => {\n            try{\n                const res=await axios.get(\"/messages/\" + currentChat?._id)\n                setMessage(res.data)\n            }\n            catch(err){\n                console.log(err)\n            }\n        }\n        getMessages();\n    },[currentChat])\n\n    \n    const handleSubmit= async (e)=>{\n        e.preventDefault();\n        const message={\n            sender: state._id,\n            text: newMessage,\n            conversationId : currentChat._id,\n        };\n\n        const receiverId= currentChat.members.find(member=> member!==state._id)\n\n        socket.current.emit(\"sendMessage\",{\n            senderId: state._id,\n            receiverId,\n            text: newMessage,\n        })\n        try{\n            const res=await axios.post(\"/messages\",message)\n            setMessage([...messages,res.data])\n            setNewMessage(\"\")\n        }\n        catch(err)\n        {\n            console.log(err)\n        }\n    }\n\n    useEffect(()=>{\n        scrollRef.current?.scrollIntoView({behavior:\"smooth\"})\n    },[messages])\n\n    useEffect(()=>{\n        socket.current.emit(\"addUser\",state?._id)\n        socket.current.on(\"getUsers\",users=>{\n            setOnlineUsers(state?.following.filter(f=>users?.some(u=>u.userId===f)))\n        })\n    },[state])\n\n    //Commented for testing purpose\n    // useEffect(()=>{\n    //    socket.current.on(\"getMessage\",data=>{\n    //     setArrivalMessage({\n    //         sender: data.senderId,\n    //         text: data.text,\n    //         createdAt: Date.now(),\n    //     })\n    //    })\n    // },[])\n\n    useEffect(()=>{\n        arrivalMessage && \n            currentChat?.members.includes(arrivalMessage.sender) &&\n            setMessage((prev)=>[...prev,arrivalMessage]);\n    },[arrivalMessage,currentChat]);\n\n\n    return(\n        <>\n        {!state?<h1>LOADING...</h1>\n        :\n        <div className=\"messenger\">\n            <div className=\"chatMenu\">\n                <div className=\"chatMenuWrapper\">\n                    <input placeholder=\"Search for friends\" className=\"chatMenuInput\" />\n                    {conversations.map(c=>(\n                        <div onClick={()=>setCurrentChat(c)}>\n                            <Conversations conversation={c} currentUser={state}/>\n                        </div>\n                    ))}\n                </div>\n            </div>\n            <div className=\"chatBox\">\n                <div className=\"chatBoxWrapper\">\n                    {\n                        currentChat ?\n                    (<>\n                    <div className=\"chatBoxTop\">\n                        {messages.map((m)=>(\n                            <div ref={scrollRef}>\n                                <Message message = {m} own={m.sender===state._id}/>\n                            </div>\n                        ))}\n                        \n                    </div>\n                    <div className=\"chatBoxBottom\">\n                        <textarea \n                        className=\"chatMessageInput\" \n                        placeholder=\"write something...\"\n                        onChange={(e)=>setNewMessage(e.target.value)}\n                        value={newMessage}\n                        ></textarea>\n                        <button className=\"chatSubmitButton\" onClick={handleSubmit}>Send</button>\n                    </div></>\n                    ) :(\n                         <span className=\"noConversationText\">\n                             Open a conversation to start a chat\n                         </span>\n                         )}\n                </div>        \n            </div>\n            <div className=\"chatOnline\">\n                <div className=\"chatOnlineWrapper\">\n                    <ChatOnline \n                    onlineUsers={onlineUsers} \n                    currentId={state?._id}\n                    setCurrentChat={setCurrentChat}\n                    />\n                </div>\n            </div>\n        </div>\n        }\n        </>\n    )\n\n}\n\nexport default Messenger"]},"metadata":{},"sourceType":"module"}