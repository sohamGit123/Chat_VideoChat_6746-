{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Raj\\\\Desktop\\\\Projects\\\\Soham FinalYearProjectWork-master\\\\Frontend\\\\client\\\\src\\\\components\\\\screens\\\\CreatePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport M from 'materialize-css';\nimport { useHistory } from 'react-router-dom';\n\nconst CreatePost = () => {\n  _s();\n\n  const history = useHistory();\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext);\n\n  if (!state) {\n    function preback() {\n      window.history.forward();\n    }\n\n    setTimeout(preback(), 0);\n    window.onunload = null;\n  }\n\n  useEffect(() => {\n    if (url == \"empty\") {\n      console.log(\"hello\");\n      fetch(\"/createpost\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\n        },\n        body: JSON.stringify({\n          title,\n          body\n        })\n      }).then(res => res.json()).then(data => {\n        console.log(data);\n\n        if (data.error) {\n          M.toast({\n            html: data.error,\n            classes: \"#c62828 red darken-3\"\n          });\n        } else {\n          M.toast({\n            html: \"Posted successfully\",\n            classes: \"#43a047 green darken-1\"\n          });\n          history.push('/');\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    } else if (url) {\n      fetch(\"/createpost\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\n        },\n        body: JSON.stringify({\n          title,\n          body,\n          pic: url\n        })\n      }).then(res => res.json()).then(data => {\n        console.log(data);\n\n        if (data.error) {\n          M.toast({\n            html: data.error,\n            classes: \"#c62828 red darken-3\"\n          });\n        } else {\n          M.toast({\n            html: \"Posted successfully\",\n            classes: \"#43a047 green darken-1\"\n          });\n          history.push('/');\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }, [url]);\n\n  const postDetails = () => {\n    if (!image) {\n      console.log(\"Upload an image\");\n      setUrl(\"empty\");\n    } else {\n      console.log(\"Yeah image is uploading\");\n      const data = new FormData();\n      data.append(\"file\", image);\n      data.append(\"upload_preset\", \"explore-app\");\n      data.append(\"cloud_name\", \"codersneverquit\");\n      fetch(\"https://api.cloudinary.com/v1_1/codersneverquit/image/upload\", {\n        method: \"post\",\n        body: data\n      }).then(res => res.json()).then(data => {\n        setUrl(data.url);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !state ? \"\" : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card input-filed\",\n      style: {\n        margin: \"10px auto\",\n        maxWidth: \"500px\",\n        padding: \"20px\",\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"title\",\n        onChange: event => setTitle(event.target.value),\n        value: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"body\",\n        value: body,\n        onChange: event => setBody(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-field input-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn waves-effect waves-light\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Upload Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: event => setImage(event.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-path-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"file-path validate\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn waves-effect waves-light\",\n        onClick: () => postDetails(),\n        children: \"Submit post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 8\n    }, this)\n  }, void 0, false);\n};\n\n_s(CreatePost, \"BBG8AZR0pGI9YYQtCXber9gstBI=\", false, function () {\n  return [useHistory];\n});\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["C:/Users/Raj/Desktop/Projects/Soham FinalYearProjectWork-master/Frontend/client/src/components/screens/CreatePost.js"],"names":["React","useState","useEffect","M","useHistory","CreatePost","history","title","setTitle","body","setBody","image","setImage","url","setUrl","state","dispatch","useContext","UserContext","preback","window","forward","setTimeout","onunload","console","log","fetch","method","headers","localStorage","getItem","JSON","stringify","then","res","json","data","error","toast","html","classes","push","catch","err","pic","postDetails","FormData","append","margin","maxWidth","padding","textAlign","event","target","value","files"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport M from 'materialize-css'\nimport {useHistory} from 'react-router-dom'\nconst CreatePost = ()=>{\n    const history=useHistory()\n    const [title,setTitle]=useState(\"\")\n    const [body,setBody]=useState(\"\")\n    const [image,setImage]=useState(\"\")\n    const [url,setUrl]=useState(\"\")\n    const {state,dispatch}=useContext(UserContext)\n\n    if(!state){\n        function preback(){ window.history.forward(); }\n        setTimeout(preback(),0);\n        window.onunload=null  \n    }\n\n    useEffect(()=>{\n        if(url==\"empty\"){\n            console.log(\"hello\")\n            fetch(\"/createpost\",{\n                method: \"post\",\n                headers: {\n                    \"Content-Type\":\"application/json\",\n                    \"Authorization\":\"token \"+localStorage.getItem(\"jwt\")\n                },\n                body: JSON.stringify({\n                    title,\n                    body\n                })\n            }).then(res=>res.json())\n            .then(data=>{\n                console.log(data)\n                if(data.error){\n                    M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\n                }\n                else{\n                    M.toast({html:\"Posted successfully\",classes:\"#43a047 green darken-1\"})\n                    history.push('/')\n                }\n            })\n            .catch(err=>{\n                console.log(err)\n            })\n        }\n        else if(url){\n            fetch(\"/createpost\",{\n                method: \"post\",\n                headers: {\n                    \"Content-Type\":\"application/json\",\n                    \"Authorization\":\"token \"+localStorage.getItem(\"jwt\")\n                },\n                body: JSON.stringify({\n                    title,\n                    body,\n                    pic: url\n                })\n            }).then(res=>res.json())\n            .then(data=>{\n                console.log(data)\n                if(data.error){\n                    M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\n                }\n                else{\n                    M.toast({html:\"Posted successfully\",classes:\"#43a047 green darken-1\"})\n                    history.push('/')\n                }\n            })\n            .catch(err=>{\n                console.log(err)\n            })\n        }\n    },[url])\n\n    const postDetails=()=>{\n        if(!image){\n            console.log(\"Upload an image\")\n            setUrl(\"empty\")\n        }\n        else{\n            console.log(\"Yeah image is uploading\")\n            const data=new FormData()\n            data.append(\"file\",image)\n            data.append(\"upload_preset\",\"explore-app\")\n            data.append(\"cloud_name\",\"codersneverquit\")\n            fetch(\"https://api.cloudinary.com/v1_1/codersneverquit/image/upload\",{\n                method: \"post\",\n                body: data\n            })\n            .then(res=>res.json())\n            .then(data=>{\n                setUrl(data.url)\n            })\n            .catch(err=>{\n                console.log(err)\n            })\n        }\n    }\n\n   return(\n    <>\n    {!state?\"\"\n    :\n       <div className=\"card input-filed\"\n       style={{\n           margin:\"10px auto\",\n           maxWidth:\"500px\",\n           padding:\"20px\",\n           textAlign:\"center\"\n       }}>\n           <input type=\"text\" placeholder=\"title\" \n           onChange={(event)=>setTitle(event.target.value)}\n           value={title}\n           />\n           <input type=\"text\" placeholder=\"body\"\n           value={body}\n           onChange={(event)=>setBody(event.target.value)}\n           />\n           <div className=\"file-field input-field\">\n            <div className=\"btn waves-effect waves-light\">\n                <span>Upload Image</span>\n                <input type=\"file\" \n                onChange={(event)=>setImage(event.target.files[0])}\n                />\n            </div>\n            <div className=\"file-path-wrapper\">\n                <input className=\"file-path validate\" type=\"text\" />\n            </div>\n            </div>\n\n            <button className=\"btn waves-effect waves-light\"\n            onClick={()=>postDetails()}\n            >\n                Submit post\n            </button>\n\n       </div>\n    }\n    </>\n   )\n}\n\nexport default CreatePost"]},"metadata":{},"sourceType":"module"}