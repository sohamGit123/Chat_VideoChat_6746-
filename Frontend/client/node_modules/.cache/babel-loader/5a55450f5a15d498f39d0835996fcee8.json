{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Raj\\\\Desktop\\\\Projects\\\\copy\\\\Soham FinalYearProjectWork-master\\\\Frontend\\\\client\\\\src\\\\components\\\\screens\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { UserContext } from '../../App';\n\nconst Profile = () => {\n  _s();\n\n  const [mypics, setpics] = useState([]);\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext);\n  const [image, setImage] = useState(undefined); // const [url,setUrl]=useState(\"\")\n  // console.log(\"state in profile becomes: \"+JSON.stringify(state))\n  // console.log(\"image in profile becomes: \"+JSON.stringify(image))\n  // console.log(mypics)\n\n  if (!state) {\n    function preback() {\n      window.history.forward();\n    }\n\n    setTimeout(preback(), 0);\n    window.onunload = null;\n  }\n\n  useEffect(() => {\n    fetch('/myposts', {\n      headers: {\n        \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\n      }\n    }).then(res => res.json()).then(result => {\n      //console.log(\"Result===>>>>\"+JSON.stringify(result))\n      // console.log(\"Use Effect 1 runs\")\n      setpics(result.myposts);\n    });\n  }, []);\n  useEffect(() => {\n    if (image) {\n      console.log(\"Use Effect 2 runs\");\n      const data = new FormData();\n      data.append(\"file\", image);\n      data.append(\"upload_preset\", \"explore-app\");\n      data.append(\"cloud_name\", \"codersneverquit\");\n      fetch(\"https://api.cloudinary.com/v1_1/codersneverquit/image/upload\", {\n        method: \"post\",\n        body: data\n      }).then(res => res.json()).then(data => {\n        // setUrl(data.url)\n        // localStorage.setItem(\"user\",JSON.stringify({...state,pic:data.url}))\n        // dispatch({type:\"UPDATEPIC\",payload:data.url})\n        console.log(\"inner fetch method runs\");\n        fetch('/updatepic', {\n          method: \"put\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\n          },\n          body: JSON.stringify({\n            pic: data.url\n          })\n        }).then(res => res.json()).then(result => {\n          localStorage.setItem(\"user\", JSON.stringify({ ...state,\n            pic: data.url\n          }));\n          window.location.reload(); //Not necessary to that extent.\n\n          dispatch({\n            type: \"UPDATEPIC\",\n            payload: result.pic\n          });\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }, [image]);\n\n  const updatePhoto = file => {\n    setImage(file);\n  };\n\n  const likePost = id => {\n    fetch('/like', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      //result means the updated post\n      const newdata = mypics.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      }); //newdata means the entire updated array consisting of all the posts of every user in the home page.\n\n      setpics(newdata);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const unlikePost = id => {\n    fetch('/unlike', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      // console.log(\"result: \"+JSON.stringify(result))\n      // console.log(\"item: \"+JSON.stringify(data[0]))\n      const newdata = mypics.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      }); //newdata means the entire updated array consisting of all the posts of every user in the home page.\n\n      setpics(newdata);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const loveReact = id => {\n    fetch('/fav', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      //result means the updated post\n      const newdata = mypics.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      }); //newdata means the entire updated array consisting of all the posts of every user in the home page.\n\n      setpics(newdata);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const removeLoveReact = id => {\n    fetch('/removefav', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      // console.log(\"result: \"+JSON.stringify(result))\n      // console.log(\"item: \"+JSON.stringify(data[0]))\n      const newdata = mypics.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      }); //newdata means the entire updated array consisting of all the posts of every user in the home page.\n\n      setpics(newdata);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const makeComment = (text, postId) => {\n    fetch('/comment', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId,\n        text\n      })\n    }).then(res => res.json()).then(result => {\n      // console.log(result)\n      const newdata = mypics.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      });\n      setpics(newdata);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const deletepost = postid => {\n    fetch('/deletepost/' + postid, {\n      method: \"delete\",\n      headers: {\n        Authorization: \"token \" + localStorage.getItem(\"jwt\")\n      }\n    }).then(res => res.json()).then(result => {\n      // console.log(result)//Printing the deleted post in the console.\n      const newData = mypics.filter(item => {\n        return item._id != result._id;\n      });\n      setpics(newData);\n    });\n  };\n\n  const [currentPost, setCurrentPost] = useState(\"\");\n\n  const foo = () => {\n    console.log(\"JSX is rendering\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !state ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: foo()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"550px\",\n        margin: \"0px auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-around\",\n          margin: \"18px 0px\",\n          borderBottom: \"1px solid grey\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              width: \"160px\",\n              height: \"160px\",\n              borderRadius: \"80px\"\n            },\n            src: state ? state.pic : \"loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-field input-field\",\n              style: {\n                margin: \"10px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"btn waves-effect waves-light\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Update Profile Pic\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  onChange: event => updatePhoto(event.target.files[0])\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-path-wrapper\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"file-path validate\",\n                  type: \"text\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: state ? state.name : \"loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: state ? state.email : \"loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              width: \"108%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [mypics.length, \" posts\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [state ? state.followers.length : \"Loading...\", \" followers\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [state ? state.following.length : \"Loading...\", \" followings\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gallery\",\n        children: mypics.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card profile-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                style: {\n                  color: \"grey\",\n                  fontFamily: 'cursive',\n                  paddingLeft: '20px',\n                  paddingTop: '10px'\n                },\n                children: [\"Posted by \", item.postedBy.name, item.postedBy._id == state._id && /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"material-icons\",\n                  style: {\n                    float: \"right\",\n                    cursor: \"pointer\"\n                  },\n                  onClick: () => {\n                    deletepost(item._id);\n                  },\n                  children: \"delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 40\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                  children: item.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: item.body\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-image card-content\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: item.photo\n                }, item._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-content\",\n                children: [item.favourite.includes(state._id) ? /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"material-icons\",\n                  style: {\n                    color: \"red\",\n                    cursor: \"pointer\"\n                  },\n                  onClick: () => {\n                    removeLoveReact(item._id);\n                  },\n                  children: \"favorite\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"material-icons\",\n                  style: {\n                    color: \"red\",\n                    cursor: \"pointer\"\n                  },\n                  onClick: () => {\n                    loveReact(item._id);\n                  },\n                  children: \"favorite_border\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [item.favourite.length, \"    \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 41\n                }, this), item.likes.includes(state._id) ? /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"material-icons\",\n                  style: {\n                    cursor: 'pointer'\n                  },\n                  onClick: () => {\n                    unlikePost(item._id);\n                  },\n                  children: \"thumb_up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"material-icons\",\n                  style: {\n                    cursor: 'pointer'\n                  },\n                  onClick: () => {\n                    likePost(item._id);\n                  },\n                  children: \"thumb_up_off_alt\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: item.likes.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 41\n                }, this), item._id == currentPost ? item.comments.map(record => {\n                  return /*#__PURE__*/_jsxDEV(\"h6\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        fontWeight: \"700\"\n                      },\n                      children: [record.postedBy.name, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 324,\n                      columnNumber: 74\n                    }, this), record.text]\n                  }, record._id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 53\n                  }, this);\n                }) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    fontWeight: \"300\"\n                  },\n                  children: \"Click on show below to check comments..\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                  onSubmit: e => {\n                    e.preventDefault();\n                    makeComment(e.target[0].value, item._id);\n                    e.target[0].value = \"\"; //I added this line\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    placeholder: \"Add a comment\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 45\n                  }, this), item._id == currentPost ? /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    class: \"btn btn-primary\",\n                    onClick: () => {\n                      setCurrentPost(\"\");\n                    },\n                    children: \"Hide\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 49\n                  }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    class: \"btn btn-primary\",\n                    onClick: () => {\n                      setCurrentPost(item._id);\n                    },\n                    children: \"Show\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 37\n              }, this)]\n            }, item._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Profile, \"dStg6wHyaIRDfnhfmo4RDk6gNdE=\");\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Users/Raj/Desktop/Projects/copy/Soham FinalYearProjectWork-master/Frontend/client/src/components/screens/Profile.js"],"names":["React","useEffect","useState","useContext","UserContext","Profile","mypics","setpics","state","dispatch","image","setImage","undefined","preback","window","history","forward","setTimeout","onunload","fetch","headers","localStorage","getItem","then","res","json","result","myposts","console","log","data","FormData","append","method","body","JSON","stringify","pic","url","setItem","location","reload","type","payload","catch","err","updatePhoto","file","likePost","id","postId","newdata","map","item","_id","unlikePost","loveReact","removeLoveReact","makeComment","text","deletepost","postid","Authorization","newData","filter","currentPost","setCurrentPost","foo","maxWidth","margin","display","justifyContent","borderBottom","width","height","borderRadius","event","target","files","name","email","length","followers","following","color","fontFamily","paddingLeft","paddingTop","postedBy","float","cursor","title","photo","favourite","includes","likes","comments","record","fontWeight","e","preventDefault","value"],"mappings":"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","sourcesContent":["import React,{useEffect,useState,useContext} from 'react'\nimport {UserContext} from '../../App'\n\nconst Profile=()=>{\n    const [mypics,setpics]=useState([])\n    const {state,dispatch}=useContext(UserContext)\n    const [image,setImage]=useState(undefined)\n    // const [url,setUrl]=useState(\"\")\n    // console.log(\"state in profile becomes: \"+JSON.stringify(state))\n    // console.log(\"image in profile becomes: \"+JSON.stringify(image))\n    // console.log(mypics)\n    if(!state){\n        function preback(){ window.history.forward(); }\n        setTimeout(preback(),0);\n        window.onunload=null  \n    }\n    useEffect(()=>{\n        fetch('/myposts',{\n            headers:{\n                \"Authorization\":\"token \"+localStorage.getItem(\"jwt\")\n            }\n        }).then(res=>res.json())\n        .then(result=>{\n            //console.log(\"Result===>>>>\"+JSON.stringify(result))\n            // console.log(\"Use Effect 1 runs\")\n            setpics(result.myposts)\n        })\n    },[])\n\n    useEffect(()=>{\n        if(image){\n            console.log(\"Use Effect 2 runs\")\n            const data=new FormData()\n            data.append(\"file\",image)\n            data.append(\"upload_preset\",\"explore-app\")\n            data.append(\"cloud_name\",\"codersneverquit\")\n            fetch(\"https://api.cloudinary.com/v1_1/codersneverquit/image/upload\",{\n                method: \"post\",\n                body: data\n            })\n            .then(res=>res.json())\n            .then(data=>{\n                // setUrl(data.url)\n                // localStorage.setItem(\"user\",JSON.stringify({...state,pic:data.url}))\n                // dispatch({type:\"UPDATEPIC\",payload:data.url})\n                console.log(\"inner fetch method runs\")\n                fetch('/updatepic',{\n                    method:\"put\",\n                    headers:{\n                        \"Content-Type\":\"application/json\",\n                        \"Authorization\":\"token \"+localStorage.getItem(\"jwt\")\n                    },\n                    body:JSON.stringify({\n                        pic:data.url\n                    })\n                }).then(res=>res.json())\n                .then(result=>{\n                    localStorage.setItem(\"user\",JSON.stringify({...state,pic:data.url}))\n                    window.location.reload()//Not necessary to that extent.\n                    dispatch({type:\"UPDATEPIC\",payload:result.pic})\n                })\n            })\n            .catch(err=>{\n                console.log(err)\n            })\n        }\n    },[image])\n\n    const updatePhoto=(file)=>{\n        setImage(file)\n    }\n\n    const likePost=(id)=>{\n        fetch('/like',{\n            method: \"put\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"token \"+localStorage.getItem(\"jwt\")\n            },\n            body:JSON.stringify({\n                postId:id\n            })\n        }).then(res=>res.json())\n        .then(result=>{\n            //result means the updated post\n            const newdata=mypics.map(item=>{\n                if(item._id==result._id){\n                    return result\n                }\n                else{\n                    return item\n                }\n            })\n            //newdata means the entire updated array consisting of all the posts of every user in the home page.\n            setpics(newdata)\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n    const unlikePost=(id)=>{\n        fetch('/unlike',{\n            method: \"put\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"token \"+localStorage.getItem(\"jwt\")\n            },\n            body:JSON.stringify({\n                postId:id\n            })\n        }).then(res=>res.json())\n        .then(result=>{\n            // console.log(\"result: \"+JSON.stringify(result))\n            // console.log(\"item: \"+JSON.stringify(data[0]))\n            const newdata=mypics.map(item=>{\n                if(item._id==result._id){\n                    return result\n                }\n                else{\n                    return item\n                }\n            })\n            //newdata means the entire updated array consisting of all the posts of every user in the home page.\n            setpics(newdata)\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n\n    const loveReact=(id)=>{\n        fetch('/fav',{\n            method: \"put\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"token \"+localStorage.getItem(\"jwt\")\n            },\n            body:JSON.stringify({\n                postId:id\n            })\n        }).then(res=>res.json())\n        .then(result=>{\n            //result means the updated post\n            const newdata=mypics.map(item=>{\n                if(item._id==result._id){\n                    return result\n                }\n                else{\n                    return item\n                }\n            })\n            //newdata means the entire updated array consisting of all the posts of every user in the home page.\n            setpics(newdata)\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n\n    const removeLoveReact=(id)=>{\n        fetch('/removefav',{\n            method: \"put\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"token \"+localStorage.getItem(\"jwt\")\n            },\n            body:JSON.stringify({\n                postId:id\n            })\n        }).then(res=>res.json())\n        .then(result=>{\n            // console.log(\"result: \"+JSON.stringify(result))\n            // console.log(\"item: \"+JSON.stringify(data[0]))\n            const newdata=mypics.map(item=>{\n                if(item._id==result._id){\n                    return result\n                }\n                else{\n                    return item\n                }\n            })\n            //newdata means the entire updated array consisting of all the posts of every user in the home page.\n            setpics(newdata)\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n\n    const makeComment=(text,postId)=>{\n        fetch('/comment',{\n            method:\"put\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"token \"+localStorage.getItem(\"jwt\")\n            },\n            body:JSON.stringify({\n                postId,\n                text\n            })\n        })\n        .then(res=>res.json())\n        .then(result=>{\n            // console.log(result)\n            const newdata=mypics.map(item=>{\n                if(item._id==result._id){\n                    return result\n                }\n                else{\n                    return item\n                }\n            })\n            setpics(newdata)\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n\n    const deletepost=(postid)=>{\n        fetch('/deletepost/'+postid,{\n            method: \"delete\",\n            headers: {\n                Authorization: \"token \"+localStorage.getItem(\"jwt\")\n            }\n        }).then(res=>res.json())\n        .then(result=>{\n            // console.log(result)//Printing the deleted post in the console.\n            const newData=mypics.filter(item=>{\n                return item._id!=result._id\n            })\n            setpics(newData)\n        })\n    }\n    const [currentPost,setCurrentPost]=useState(\"\")\n    const foo=()=>{\n        console.log(\"JSX is rendering\")\n    }\n    return (\n        <>\n        {!state?<h1>{foo()}</h1>\n        :\n        <div style={{\n            maxWidth: \"550px\", margin: \"0px auto\"\n        }}>\n            <div style={{\n                display: \"flex\",\n                justifyContent: \"space-around\",\n                margin: \"18px 0px\",\n                borderBottom: \"1px solid grey\"\n            }}>\n                <div>\n                    <img style={{width: \"160px\", height: \"160px\", borderRadius: \"80px\"}}\n                    src={state?state.pic:\"loading\"}\n                    />\n                    <div>\n                    <div className=\"file-field input-field\" style={{margin:\"10px\"}}>\n                        <div className=\"btn waves-effect waves-light\">\n                            <span>Update Profile Pic</span>\n                            <input type=\"file\" \n                            onChange={(event)=>updatePhoto(event.target.files[0])}\n                            />\n                        </div>\n                        <div className=\"file-path-wrapper\">\n                            <input className=\"file-path validate\" type=\"text\" />\n                        </div>\n                    </div>\n                    </div>\n                </div>\n                <div>\n                    <h4>{state?state.name:\"loading...\"}</h4>\n                    <h6>{state?state.email:\"loading...\"}</h6>\n                    <div style={{display: \"flex\", justifyContent: \"space-between\", width:\"108%\"}}>\n                        <h6>{mypics.length} posts</h6>\n                        <h6>{state?state.followers.length:\"Loading...\"} followers</h6>\n                        <h6>{state?state.following.length:\"Loading...\"} followings</h6>\n                    </div>\n                </div>\n            </div>\n            <div className=\"gallery\">\n                {\n                    mypics.map((item)=>{\n                        return (\n                            <div>\n                                <div key={item._id} className=\"card profile-card\">\n                                    <h5\n                                    style={{color:\"grey\",fontFamily:'cursive',paddingLeft:'20px',paddingTop:'10px'}}>\n                                    Posted by {item.postedBy.name}\n                                    {/*item.postedBy._id refers to the post id and state._id refers to the user id*/}\n                                    {item.postedBy._id==state._id \n                                    && <i className=\"material-icons\" style={{float:\"right\",cursor:\"pointer\"}}\n                                    onClick={()=>{deletepost(item._id)}}\n                                    >delete</i>}\n                                    </h5>\n                                    <div className=\"card-content\">\n                                        <h6>{item.title}</h6>\n                                        <p>{item.body}</p>\n                                    </div>\n                                    <div className=\"card-image card-content\">\n                                        <img key={item._id} src={item.photo}/>\n                                    </div>\n                                    <div className=\"card-content\">\n                                        {\n                                            item.favourite.includes(state._id)\n                                            ?\n                                            <i className=\"material-icons\" style={{color: \"red\",cursor:\"pointer\"}} onClick={()=>{removeLoveReact(item._id)}}>favorite</i>\n                                            :\n                                            <i className=\"material-icons\" style={{color: \"red\",cursor:\"pointer\"}} onClick={()=>{loveReact(item._id)}}>favorite_border</i>\n                                        }\n                                        <span>{item.favourite.length}    </span>\n                                        {\n                                            item.likes.includes(state._id)\n                                            ?\n                                            <i className=\"material-icons\" style={{cursor: 'pointer'}} onClick={()=>{unlikePost(item._id)}}>thumb_up</i>\n                                            :\n                                            <i className=\"material-icons\" style={{cursor: 'pointer'}} onClick={()=>{likePost(item._id)}}>thumb_up_off_alt</i>\n                                        }\n                                        <span>{item.likes.length}</span>\n                                        {\n                                            (item._id==currentPost) \n                                            ?\n                                            item.comments.map(record=>{\n                                                return (\n                                                    <h6 key={record._id}><span style={{fontWeight:\"700\"}}>{record.postedBy.name} </span>{record.text}</h6>\n                                                )\n                                            })\n                                            :\n                                            <p style={{fontWeight:\"300\"}}>Click on show below to check comments..</p>\n                                        }\n                                        <form onSubmit={(e)=>{\n                                            e.preventDefault()\n                                            makeComment(e.target[0].value,item._id)\n                                            e.target[0].value=\"\"//I added this line\n                                        }}>\n                                            <input type=\"text\" placeholder=\"Add a comment\"/>\n                                            {\n                                                (item._id==currentPost)\n                                                ?\n                                                <button type=\"button\" class=\"btn btn-primary\" onClick={()=>{setCurrentPost(\"\")}}>Hide</button>\n                                                :\n                                                <button type=\"button\" class=\"btn btn-primary\" onClick={()=>{setCurrentPost(item._id)}}>Show</button>\n                                            }\n                                    \n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n                \n            </div>\n        </div>\n        }\n        </>\n    )\n}\n\nexport default Profile"]},"metadata":{},"sourceType":"module"}