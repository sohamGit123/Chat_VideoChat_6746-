{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Raj\\\\Desktop\\\\Social Networking\\\\Frontend\\\\client\\\\src\\\\components\\\\screens\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { UserContext } from '../../App';\nimport { Link } from 'react-router-dom';\n\nconst Home = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext);\n  useEffect(() => {\n    fetch('/allpost', {\n      headers: {\n        \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\n      }\n    }).then(res => res.json()).then(result => {\n      //console.log(result)\n      setData(result.posts);\n    });\n  }, []);\n\n  const likePost = id => {\n    fetch('/like', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      //result means the updated post\n      const newdata = data.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      }); //newdata means the entire updated array consisting of all the posts of every user in the home page.\n\n      setData(newdata);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const unlikePost = id => {\n    fetch('/unlike', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      // console.log(\"result: \"+JSON.stringify(result))\n      // console.log(\"item: \"+JSON.stringify(data[0]))\n      const newdata = data.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      }); //newdata means the entire updated array consisting of all the posts of every user in the home page.\n\n      setData(newdata);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const loveReact = id => {\n    fetch('/fav', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      //result means the updated post\n      const newdata = data.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      }); //newdata means the entire updated array consisting of all the posts of every user in the home page.\n\n      setData(newdata);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const removeLoveReact = id => {\n    fetch('/removefav', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      // console.log(\"result: \"+JSON.stringify(result))\n      // console.log(\"item: \"+JSON.stringify(data[0]))\n      const newdata = data.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      }); //newdata means the entire updated array consisting of all the posts of every user in the home page.\n\n      setData(newdata);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const reporting = id => {\n    fetch('/report', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      //result means the updated post\n      const newdata = data.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      }); //newdata means the entire updated array consisting of all the posts of every user in the home page.\n\n      setData(newdata);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const withdrawing = id => {\n    fetch('/rmvreport', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      // console.log(\"result: \"+JSON.stringify(result))\n      // console.log(\"item: \"+JSON.stringify(data[0]))\n      const newdata = data.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      }); //newdata means the entire updated array consisting of all the posts of every user in the home page.\n\n      setData(newdata);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const makeComment = (text, postId) => {\n    fetch('/comment', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId,\n        text\n      })\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      const newdata = data.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      });\n      setData(newdata);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const deletepost = postid => {\n    fetch('/deletepost/' + postid, {\n      method: \"delete\",\n      headers: {\n        Authorization: \"token \" + localStorage.getItem(\"jwt\")\n      }\n    }).then(res => res.json()).then(result => {\n      console.log(result); //Printing the deleted post in the console.\n\n      const newData = data.filter(item => {\n        return item._id != result._id;\n      });\n      setData(newData);\n    });\n  };\n\n  const [currentPost, setCurrentPost] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: data.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card home-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          style: {\n            color: \"grey\",\n            fontFamily: 'cursive',\n            paddingLeft: '20px',\n            paddingTop: '10px'\n          },\n          children: [\"Posted by\", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/profile/\" + item.postedBy._id,\n            children: item.postedBy.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 33\n          }, this), (item.postedBy._id == state._id || state.isadmin && item.reports.length > 0) && /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons\",\n            style: {\n              float: \"right\",\n              cursor: 'pointer'\n            },\n            onClick: () => {\n              deletepost(item._id);\n            },\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-image card-content\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.photo\n          }, item._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [item.favourite.includes(state._id) ? /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons\",\n            style: {\n              color: \"red\",\n              cursor: \"pointer\"\n            },\n            onClick: () => {\n              removeLoveReact(item._id);\n            },\n            children: \"favorite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons\",\n            style: {\n              color: \"red\",\n              cursor: \"pointer\"\n            },\n            onClick: () => {\n              loveReact(item._id);\n            },\n            children: \"favorite_border\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [item.favourite.length, \"    \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 33\n          }, this), item.likes.includes(state._id) ? /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons\",\n            style: {\n              cursor: 'pointer'\n            },\n            onClick: () => {\n              unlikePost(item._id);\n            },\n            children: \"thumb_up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons\",\n            style: {\n              cursor: 'pointer'\n            },\n            onClick: () => {\n              likePost(item._id);\n            },\n            children: \"thumb_up_off_alt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [item.likes.length, \"     \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 33\n          }, this), !(state.isadmin || item.postedBy._id == state._id) ? item.reports.includes(state._id) ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            style: {\n              float: \"right\"\n            },\n            onClick: () => {\n              withdrawing(item._id);\n            },\n            children: \"Reported\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            style: {\n              float: \"right\"\n            },\n            onClick: () => {\n              reporting(item._id);\n            },\n            children: \"Report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 37\n          }, this) : \"\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 33\n          }, this), state.isadmin ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"reported \", item.reports.length, \" times\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 37\n          }, this) : \"\", item._id == currentPost ? item.comments.map(record => {\n            return /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontWeight: \"700\"\n                },\n                children: [record.postedBy.name, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 66\n              }, this), record.text]\n            }, record._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 45\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontWeight: \"300\"\n            },\n            children: \"Click on show below to check comments..\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => {\n              e.preventDefault();\n              makeComment(e.target[0].value, item._id);\n              e.target[0].value = \"\"; //I added this line\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Add a comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 37\n            }, this), item._id == currentPost ? /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              class: \"btn btn-primary\",\n              onClick: () => {\n                setCurrentPost(\"\");\n              },\n              children: \"Hide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              class: \"btn btn-primary\",\n              onClick: () => {\n                setCurrentPost(item._id);\n              },\n              children: \"Show\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 29\n        }, this)]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"+etKQrB+hd0e3LfUyfVubcZAnJY=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Raj/Desktop/Social Networking/Frontend/client/src/components/screens/Home.js"],"names":["React","useState","useEffect","useContext","UserContext","Link","Home","data","setData","state","dispatch","fetch","headers","localStorage","getItem","then","res","json","result","posts","likePost","id","method","body","JSON","stringify","postId","newdata","map","item","_id","catch","err","console","log","unlikePost","loveReact","removeLoveReact","reporting","withdrawing","makeComment","text","deletepost","postid","Authorization","newData","filter","currentPost","setCurrentPost","color","fontFamily","paddingLeft","paddingTop","postedBy","name","isadmin","reports","length","float","cursor","title","photo","favourite","includes","likes","comments","record","fontWeight","e","preventDefault","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,EAAiCC,UAAjC,QAAkD,OAAlD;AACA,SAAQC,WAAR,QAA0B,WAA1B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;AAEA,MAAMC,IAAI,GAAC,MAAI;AAAA;;AACX,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAeP,QAAQ,CAAC,EAAD,CAA7B;AACA,QAAM;AAACQ,IAAAA,KAAD;AAAOC,IAAAA;AAAP,MAAiBP,UAAU,CAACC,WAAD,CAAjC;AACAF,EAAAA,SAAS,CAAC,MAAI;AACVS,IAAAA,KAAK,CAAC,UAAD,EAAY;AACbC,MAAAA,OAAO,EAAC;AACJ,yBAAiB,WAAWC,YAAY,CAACC,OAAb,CAAqB,KAArB;AADxB;AADK,KAAZ,CAAL,CAIGC,IAJH,CAIQC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAJb,EAKCF,IALD,CAKMG,MAAM,IAAE;AACV;AACAV,MAAAA,OAAO,CAACU,MAAM,CAACC,KAAR,CAAP;AACH,KARD;AASH,GAVQ,EAUP,EAVO,CAAT;;AAYA,QAAMC,QAAQ,GAAEC,EAAD,IAAM;AACjBV,IAAAA,KAAK,CAAC,OAAD,EAAS;AACVW,MAAAA,MAAM,EAAE,KADE;AAEVV,MAAAA,OAAO,EAAC;AACJ,wBAAe,kBADX;AAEJ,yBAAgB,WAASC,YAAY,CAACC,OAAb,CAAqB,KAArB;AAFrB,OAFE;AAMVS,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAChBC,QAAAA,MAAM,EAACL;AADS,OAAf;AANK,KAAT,CAAL,CASGN,IATH,CASQC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EATb,EAUCF,IAVD,CAUMG,MAAM,IAAE;AACV;AACA,YAAMS,OAAO,GAACpB,IAAI,CAACqB,GAAL,CAASC,IAAI,IAAE;AACzB,YAAGA,IAAI,CAACC,GAAL,IAAUZ,MAAM,CAACY,GAApB,EAAwB;AACpB,iBAAOZ,MAAP;AACH,SAFD,MAGI;AACA,iBAAOW,IAAP;AACH;AACJ,OAPa,CAAd,CAFU,CAUV;;AACArB,MAAAA,OAAO,CAACmB,OAAD,CAAP;AACH,KAtBD,EAuBCI,KAvBD,CAuBOC,GAAG,IAAE;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAzBD;AA0BH,GA3BD;;AA4BA,QAAMG,UAAU,GAAEd,EAAD,IAAM;AACnBV,IAAAA,KAAK,CAAC,SAAD,EAAW;AACZW,MAAAA,MAAM,EAAE,KADI;AAEZV,MAAAA,OAAO,EAAC;AACJ,wBAAe,kBADX;AAEJ,yBAAgB,WAASC,YAAY,CAACC,OAAb,CAAqB,KAArB;AAFrB,OAFI;AAMZS,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAChBC,QAAAA,MAAM,EAACL;AADS,OAAf;AANO,KAAX,CAAL,CASGN,IATH,CASQC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EATb,EAUCF,IAVD,CAUMG,MAAM,IAAE;AACV;AACA;AACA,YAAMS,OAAO,GAACpB,IAAI,CAACqB,GAAL,CAASC,IAAI,IAAE;AACzB,YAAGA,IAAI,CAACC,GAAL,IAAUZ,MAAM,CAACY,GAApB,EAAwB;AACpB,iBAAOZ,MAAP;AACH,SAFD,MAGI;AACA,iBAAOW,IAAP;AACH;AACJ,OAPa,CAAd,CAHU,CAWV;;AACArB,MAAAA,OAAO,CAACmB,OAAD,CAAP;AACH,KAvBD,EAwBCI,KAxBD,CAwBOC,GAAG,IAAE;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KA1BD;AA2BH,GA5BD;;AA8BA,QAAMI,SAAS,GAAEf,EAAD,IAAM;AAClBV,IAAAA,KAAK,CAAC,MAAD,EAAQ;AACTW,MAAAA,MAAM,EAAE,KADC;AAETV,MAAAA,OAAO,EAAC;AACJ,wBAAe,kBADX;AAEJ,yBAAgB,WAASC,YAAY,CAACC,OAAb,CAAqB,KAArB;AAFrB,OAFC;AAMTS,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAChBC,QAAAA,MAAM,EAACL;AADS,OAAf;AANI,KAAR,CAAL,CASGN,IATH,CASQC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EATb,EAUCF,IAVD,CAUMG,MAAM,IAAE;AACV;AACA,YAAMS,OAAO,GAACpB,IAAI,CAACqB,GAAL,CAASC,IAAI,IAAE;AACzB,YAAGA,IAAI,CAACC,GAAL,IAAUZ,MAAM,CAACY,GAApB,EAAwB;AACpB,iBAAOZ,MAAP;AACH,SAFD,MAGI;AACA,iBAAOW,IAAP;AACH;AACJ,OAPa,CAAd,CAFU,CAUV;;AACArB,MAAAA,OAAO,CAACmB,OAAD,CAAP;AACH,KAtBD,EAuBCI,KAvBD,CAuBOC,GAAG,IAAE;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAzBD;AA0BH,GA3BD;;AA6BA,QAAMK,eAAe,GAAEhB,EAAD,IAAM;AACxBV,IAAAA,KAAK,CAAC,YAAD,EAAc;AACfW,MAAAA,MAAM,EAAE,KADO;AAEfV,MAAAA,OAAO,EAAC;AACJ,wBAAe,kBADX;AAEJ,yBAAgB,WAASC,YAAY,CAACC,OAAb,CAAqB,KAArB;AAFrB,OAFO;AAMfS,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAChBC,QAAAA,MAAM,EAACL;AADS,OAAf;AANU,KAAd,CAAL,CASGN,IATH,CASQC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EATb,EAUCF,IAVD,CAUMG,MAAM,IAAE;AACV;AACA;AACA,YAAMS,OAAO,GAACpB,IAAI,CAACqB,GAAL,CAASC,IAAI,IAAE;AACzB,YAAGA,IAAI,CAACC,GAAL,IAAUZ,MAAM,CAACY,GAApB,EAAwB;AACpB,iBAAOZ,MAAP;AACH,SAFD,MAGI;AACA,iBAAOW,IAAP;AACH;AACJ,OAPa,CAAd,CAHU,CAWV;;AACArB,MAAAA,OAAO,CAACmB,OAAD,CAAP;AACH,KAvBD,EAwBCI,KAxBD,CAwBOC,GAAG,IAAE;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KA1BD;AA2BH,GA5BD;;AA8BA,QAAMM,SAAS,GAAEjB,EAAD,IAAM;AAClBV,IAAAA,KAAK,CAAC,SAAD,EAAW;AACZW,MAAAA,MAAM,EAAE,KADI;AAEZV,MAAAA,OAAO,EAAC;AACJ,wBAAe,kBADX;AAEJ,yBAAgB,WAASC,YAAY,CAACC,OAAb,CAAqB,KAArB;AAFrB,OAFI;AAMZS,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAChBC,QAAAA,MAAM,EAACL;AADS,OAAf;AANO,KAAX,CAAL,CASGN,IATH,CASQC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EATb,EAUCF,IAVD,CAUMG,MAAM,IAAE;AACV;AACA,YAAMS,OAAO,GAACpB,IAAI,CAACqB,GAAL,CAASC,IAAI,IAAE;AACzB,YAAGA,IAAI,CAACC,GAAL,IAAUZ,MAAM,CAACY,GAApB,EAAwB;AACpB,iBAAOZ,MAAP;AACH,SAFD,MAGI;AACA,iBAAOW,IAAP;AACH;AACJ,OAPa,CAAd,CAFU,CAUV;;AACArB,MAAAA,OAAO,CAACmB,OAAD,CAAP;AACH,KAtBD,EAuBCI,KAvBD,CAuBOC,GAAG,IAAE;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAzBD;AA0BH,GA3BD;;AA6BA,QAAMO,WAAW,GAAElB,EAAD,IAAM;AACpBV,IAAAA,KAAK,CAAC,YAAD,EAAc;AACfW,MAAAA,MAAM,EAAE,KADO;AAEfV,MAAAA,OAAO,EAAC;AACJ,wBAAe,kBADX;AAEJ,yBAAgB,WAASC,YAAY,CAACC,OAAb,CAAqB,KAArB;AAFrB,OAFO;AAMfS,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAChBC,QAAAA,MAAM,EAACL;AADS,OAAf;AANU,KAAd,CAAL,CASGN,IATH,CASQC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EATb,EAUCF,IAVD,CAUMG,MAAM,IAAE;AACV;AACA;AACA,YAAMS,OAAO,GAACpB,IAAI,CAACqB,GAAL,CAASC,IAAI,IAAE;AACzB,YAAGA,IAAI,CAACC,GAAL,IAAUZ,MAAM,CAACY,GAApB,EAAwB;AACpB,iBAAOZ,MAAP;AACH,SAFD,MAGI;AACA,iBAAOW,IAAP;AACH;AACJ,OAPa,CAAd,CAHU,CAWV;;AACArB,MAAAA,OAAO,CAACmB,OAAD,CAAP;AACH,KAvBD,EAwBCI,KAxBD,CAwBOC,GAAG,IAAE;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KA1BD;AA2BH,GA5BD;;AA8BA,QAAMQ,WAAW,GAAC,CAACC,IAAD,EAAMf,MAAN,KAAe;AAC7Bf,IAAAA,KAAK,CAAC,UAAD,EAAY;AACbW,MAAAA,MAAM,EAAC,KADM;AAEbV,MAAAA,OAAO,EAAC;AACJ,wBAAe,kBADX;AAEJ,yBAAgB,WAASC,YAAY,CAACC,OAAb,CAAqB,KAArB;AAFrB,OAFK;AAMbS,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAChBC,QAAAA,MADgB;AAEhBe,QAAAA;AAFgB,OAAf;AANQ,KAAZ,CAAL,CAWC1B,IAXD,CAWMC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAXX,EAYCF,IAZD,CAYMG,MAAM,IAAE;AACVe,MAAAA,OAAO,CAACC,GAAR,CAAYhB,MAAZ;AACA,YAAMS,OAAO,GAACpB,IAAI,CAACqB,GAAL,CAASC,IAAI,IAAE;AACzB,YAAGA,IAAI,CAACC,GAAL,IAAUZ,MAAM,CAACY,GAApB,EAAwB;AACpB,iBAAOZ,MAAP;AACH,SAFD,MAGI;AACA,iBAAOW,IAAP;AACH;AACJ,OAPa,CAAd;AAQArB,MAAAA,OAAO,CAACmB,OAAD,CAAP;AACH,KAvBD,EAwBCI,KAxBD,CAwBOC,GAAG,IAAE;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KA1BD;AA2BH,GA5BD;;AA8BA,QAAMU,UAAU,GAAEC,MAAD,IAAU;AACvBhC,IAAAA,KAAK,CAAC,iBAAegC,MAAhB,EAAuB;AACxBrB,MAAAA,MAAM,EAAE,QADgB;AAExBV,MAAAA,OAAO,EAAE;AACLgC,QAAAA,aAAa,EAAE,WAAS/B,YAAY,CAACC,OAAb,CAAqB,KAArB;AADnB;AAFe,KAAvB,CAAL,CAKGC,IALH,CAKQC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EALb,EAMCF,IAND,CAMMG,MAAM,IAAE;AACVe,MAAAA,OAAO,CAACC,GAAR,CAAYhB,MAAZ,EADU,CACS;;AACnB,YAAM2B,OAAO,GAACtC,IAAI,CAACuC,MAAL,CAAYjB,IAAI,IAAE;AAC5B,eAAOA,IAAI,CAACC,GAAL,IAAUZ,MAAM,CAACY,GAAxB;AACH,OAFa,CAAd;AAGAtB,MAAAA,OAAO,CAACqC,OAAD,CAAP;AACH,KAZD;AAaH,GAdD;;AAgBA,QAAM,CAACE,WAAD,EAAaC,cAAb,IAA6B/C,QAAQ,CAAC,EAAD,CAA3C;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,cAEQM,IAAI,CAACqB,GAAL,CAASC,IAAI,IAAE;AACX,0BACI;AAAoB,QAAA,SAAS,EAAC,gBAA9B;AAAA,gCACI;AACI,UAAA,KAAK,EAAE;AAACoB,YAAAA,KAAK,EAAC,MAAP;AAAcC,YAAAA,UAAU,EAAC,SAAzB;AAAmCC,YAAAA,WAAW,EAAC,MAA/C;AAAsDC,YAAAA,UAAU,EAAC;AAAjE,WADX;AAAA,+CAII,QAAC,IAAD;AAAM,YAAA,EAAE,EAAE,cAAYvB,IAAI,CAACwB,QAAL,CAAcvB,GAApC;AAAA,sBACCD,IAAI,CAACwB,QAAL,CAAcC;AADf;AAAA;AAAA;AAAA;AAAA,kBAJJ,EAOK,CAACzB,IAAI,CAACwB,QAAL,CAAcvB,GAAd,IAAmBrB,KAAK,CAACqB,GAAzB,IAAiCrB,KAAK,CAAC8C,OAAN,IAAiB1B,IAAI,CAAC2B,OAAL,CAAaC,MAAb,GAAoB,CAAvE,kBACE;AAAG,YAAA,SAAS,EAAC,gBAAb;AAA8B,YAAA,KAAK,EAAE;AAACC,cAAAA,KAAK,EAAC,OAAP;AAAeC,cAAAA,MAAM,EAAC;AAAtB,aAArC;AACH,YAAA,OAAO,EAAE,MAAI;AAACjB,cAAAA,UAAU,CAACb,IAAI,CAACC,GAAN,CAAV;AAAqB,aADhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARP;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAcI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACI;AAAA,sBAAKD,IAAI,CAAC+B;AAAV;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAI/B,IAAI,CAACN;AAAT;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdJ,eAkBI;AAAK,UAAA,SAAS,EAAC,yBAAf;AAAA,iCACI;AAAoB,YAAA,GAAG,EAAEM,IAAI,CAACgC;AAA9B,aAAUhC,IAAI,CAACC,GAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAlBJ,eAqBI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,qBAEQD,IAAI,CAACiC,SAAL,CAAeC,QAAf,CAAwBtD,KAAK,CAACqB,GAA9B,iBAEA;AAAG,YAAA,SAAS,EAAC,gBAAb;AAA8B,YAAA,KAAK,EAAE;AAACmB,cAAAA,KAAK,EAAE,KAAR;AAAcU,cAAAA,MAAM,EAAC;AAArB,aAArC;AAAsE,YAAA,OAAO,EAAE,MAAI;AAACtB,cAAAA,eAAe,CAACR,IAAI,CAACC,GAAN,CAAf;AAA0B,aAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,gBAIA;AAAG,YAAA,SAAS,EAAC,gBAAb;AAA8B,YAAA,KAAK,EAAE;AAACmB,cAAAA,KAAK,EAAE,KAAR;AAAcU,cAAAA,MAAM,EAAC;AAArB,aAArC;AAAsE,YAAA,OAAO,EAAE,MAAI;AAACvB,cAAAA,SAAS,CAACP,IAAI,CAACC,GAAN,CAAT;AAAoB,aAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANR,eAQI;AAAA,uBAAOD,IAAI,CAACiC,SAAL,CAAeL,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ,EAUQ5B,IAAI,CAACmC,KAAL,CAAWD,QAAX,CAAoBtD,KAAK,CAACqB,GAA1B,iBAEA;AAAG,YAAA,SAAS,EAAC,gBAAb;AAA8B,YAAA,KAAK,EAAE;AAAC6B,cAAAA,MAAM,EAAE;AAAT,aAArC;AAA0D,YAAA,OAAO,EAAE,MAAI;AAACxB,cAAAA,UAAU,CAACN,IAAI,CAACC,GAAN,CAAV;AAAqB,aAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,gBAIA;AAAG,YAAA,SAAS,EAAC,gBAAb;AAA8B,YAAA,KAAK,EAAE;AAAC6B,cAAAA,MAAM,EAAE;AAAT,aAArC;AAA0D,YAAA,OAAO,EAAE,MAAI;AAACvC,cAAAA,QAAQ,CAACS,IAAI,CAACC,GAAN,CAAR;AAAmB,aAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdR,eAgBI;AAAA,uBAAOD,IAAI,CAACmC,KAAL,CAAWP,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBJ,EAkBQ,EAAEhD,KAAK,CAAC8C,OAAN,IAAgB1B,IAAI,CAACwB,QAAL,CAAcvB,GAAd,IAAmBrB,KAAK,CAACqB,GAA3C,IAEAD,IAAI,CAAC2B,OAAL,CAAaO,QAAb,CAAsBtD,KAAK,CAACqB,GAA5B,iBAEA;AAAQ,YAAA,SAAS,EAAC,iBAAlB;AAAoC,YAAA,KAAK,EAAE;AAAC4B,cAAAA,KAAK,EAAC;AAAP,aAA3C;AAA4D,YAAA,OAAO,EAAE,MAAI;AAACnB,cAAAA,WAAW,CAACV,IAAI,CAACC,GAAN,CAAX;AAAsB,aAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,gBAIA;AAAQ,YAAA,SAAS,EAAC,iBAAlB;AAAoC,YAAA,KAAK,EAAE;AAAC4B,cAAAA,KAAK,EAAC;AAAP,aAA3C;AAA4D,YAAA,OAAO,EAAE,MAAI;AAACpB,cAAAA,SAAS,CAACT,IAAI,CAACC,GAAN,CAAT;AAAoB,aAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANA,GAQA,EA1BR,eA4BI;AAAA;AAAA;AAAA;AAAA,kBA5BJ,EA8BQrB,KAAK,CAAC8C,OAAN,gBAEA;AAAA,oCAAa1B,IAAI,CAAC2B,OAAL,CAAaC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,GAIA,EAlCR,EAqCS5B,IAAI,CAACC,GAAL,IAAUiB,WAAX,GAEAlB,IAAI,CAACoC,QAAL,CAAcrC,GAAd,CAAkBsC,MAAM,IAAE;AACtB,gCACI;AAAA,sCAAqB;AAAM,gBAAA,KAAK,EAAE;AAACC,kBAAAA,UAAU,EAAC;AAAZ,iBAAb;AAAA,2BAAkCD,MAAM,CAACb,QAAP,CAAgBC,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,sBAArB,EAAqFY,MAAM,CAACzB,IAA5F;AAAA,eAASyB,MAAM,CAACpC,GAAhB;AAAA;AAAA;AAAA;AAAA,oBADJ;AAGH,WAJD,CAFA,gBAQA;AAAG,YAAA,KAAK,EAAE;AAACqC,cAAAA,UAAU,EAAC;AAAZ,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA7CR,eA+CI;AAAM,YAAA,QAAQ,EAAGC,CAAD,IAAK;AACjBA,cAAAA,CAAC,CAACC,cAAF;AACA7B,cAAAA,WAAW,CAAC4B,CAAC,CAACE,MAAF,CAAS,CAAT,EAAYC,KAAb,EAAmB1C,IAAI,CAACC,GAAxB,CAAX;AACAsC,cAAAA,CAAC,CAACE,MAAF,CAAS,CAAT,EAAYC,KAAZ,GAAkB,EAAlB,CAHiB,CAGG;AACvB,aAJD;AAAA,oCAKI;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,WAAW,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,oBALJ,EAOS1C,IAAI,CAACC,GAAL,IAAUiB,WAAX,gBAEA;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,KAAK,EAAC,iBAA5B;AAA8C,cAAA,OAAO,EAAE,MAAI;AAACC,gBAAAA,cAAc,CAAC,EAAD,CAAd;AAAmB,eAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA,gBAIA;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,KAAK,EAAC,iBAA5B;AAA8C,cAAA,OAAO,EAAE,MAAI;AAACA,gBAAAA,cAAc,CAACnB,IAAI,CAACC,GAAN,CAAd;AAAyB,eAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXR;AAAA;AAAA;AAAA;AAAA;AAAA,kBA/CJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBJ;AAAA,SAAUD,IAAI,CAACC,GAAf;AAAA;AAAA;AAAA;AAAA,cADJ;AAuFH,KAxFD;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAgGH,CA9UD;;GAAMxB,I;;KAAAA,I;AAgVN,eAAeA,IAAf","sourcesContent":["import React,{useState,useEffect,useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Home=()=>{\r\n    const [data,setData]=useState([])\r\n    const {state,dispatch}=useContext(UserContext)\r\n    useEffect(()=>{\r\n        fetch('/allpost',{\r\n            headers:{\r\n                \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            //console.log(result)\r\n            setData(result.posts)\r\n        })\r\n    },[])\r\n\r\n    const likePost=(id)=>{\r\n        fetch('/like',{\r\n            method: \"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"token \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            //result means the updated post\r\n            const newdata=data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            //newdata means the entire updated array consisting of all the posts of every user in the home page.\r\n            setData(newdata)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    const unlikePost=(id)=>{\r\n        fetch('/unlike',{\r\n            method: \"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"token \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            // console.log(\"result: \"+JSON.stringify(result))\r\n            // console.log(\"item: \"+JSON.stringify(data[0]))\r\n            const newdata=data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            //newdata means the entire updated array consisting of all the posts of every user in the home page.\r\n            setData(newdata)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const loveReact=(id)=>{\r\n        fetch('/fav',{\r\n            method: \"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"token \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            //result means the updated post\r\n            const newdata=data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            //newdata means the entire updated array consisting of all the posts of every user in the home page.\r\n            setData(newdata)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const removeLoveReact=(id)=>{\r\n        fetch('/removefav',{\r\n            method: \"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"token \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            // console.log(\"result: \"+JSON.stringify(result))\r\n            // console.log(\"item: \"+JSON.stringify(data[0]))\r\n            const newdata=data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            //newdata means the entire updated array consisting of all the posts of every user in the home page.\r\n            setData(newdata)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const reporting=(id)=>{\r\n        fetch('/report',{\r\n            method: \"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"token \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            //result means the updated post\r\n            const newdata=data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            //newdata means the entire updated array consisting of all the posts of every user in the home page.\r\n            setData(newdata)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const withdrawing=(id)=>{\r\n        fetch('/rmvreport',{\r\n            method: \"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"token \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            // console.log(\"result: \"+JSON.stringify(result))\r\n            // console.log(\"item: \"+JSON.stringify(data[0]))\r\n            const newdata=data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            //newdata means the entire updated array consisting of all the posts of every user in the home page.\r\n            setData(newdata)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const makeComment=(text,postId)=>{\r\n        fetch('/comment',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"token \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId,\r\n                text\r\n            })\r\n        })\r\n        .then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            const newdata=data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newdata)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const deletepost=(postid)=>{\r\n        fetch('/deletepost/'+postid,{\r\n            method: \"delete\",\r\n            headers: {\r\n                Authorization: \"token \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)//Printing the deleted post in the console.\r\n            const newData=data.filter(item=>{\r\n                return item._id!=result._id\r\n            })\r\n            setData(newData)\r\n        })\r\n    }\r\n\r\n    const [currentPost,setCurrentPost]=useState(\"\")\r\n    return (\r\n        <div className=\"home\">\r\n            {\r\n                data.map(item=>{\r\n                    return (\r\n                        <div key={item._id} className=\"card home-card\">\r\n                            <h5 \r\n                                style={{color:\"grey\",fontFamily:'cursive',paddingLeft:'20px',paddingTop:'10px'}}\r\n                            >\r\n                                Posted by\r\n                                <Link to={\"/profile/\"+item.postedBy._id}>\r\n                                {item.postedBy.name}</Link>\r\n                                {/*item.postedBy._id refers to the post id and state._id refers to the user id*/}\r\n                                {(item.postedBy._id==state._id || (state.isadmin && item.reports.length>0))\r\n                                && <i className=\"material-icons\" style={{float:\"right\",cursor:'pointer'}}\r\n                                onClick={()=>{deletepost(item._id)}}\r\n\r\n                            >delete</i>}\r\n                            </h5>\r\n                            <div className=\"card-content\">\r\n                                <h6>{item.title}</h6>\r\n                                <p>{item.body}</p>\r\n                            </div>\r\n                            <div className=\"card-image card-content\">\r\n                                <img key={item._id} src={item.photo}/>\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                                {\r\n                                    item.favourite.includes(state._id)\r\n                                    ?\r\n                                    <i className=\"material-icons\" style={{color: \"red\",cursor:\"pointer\"}} onClick={()=>{removeLoveReact(item._id)}}>favorite</i>\r\n                                    :\r\n                                    <i className=\"material-icons\" style={{color: \"red\",cursor:\"pointer\"}} onClick={()=>{loveReact(item._id)}}>favorite_border</i>\r\n                                }\r\n                                <span>{item.favourite.length}    </span>\r\n                                {\r\n                                    item.likes.includes(state._id)\r\n                                    ?\r\n                                    <i className=\"material-icons\" style={{cursor: 'pointer'}} onClick={()=>{unlikePost(item._id)}}>thumb_up</i>\r\n                                    :\r\n                                    <i className=\"material-icons\" style={{cursor: 'pointer'}} onClick={()=>{likePost(item._id)}}>thumb_up_off_alt</i>\r\n                                }\r\n                                <span>{item.likes.length}     </span>\r\n                                {\r\n                                    !(state.isadmin||(item.postedBy._id==state._id))\r\n                                    ?\r\n                                    item.reports.includes(state._id)\r\n                                    ?\r\n                                    <button className=\"btn btn-primary\" style={{float:\"right\"}} onClick={()=>{withdrawing(item._id)}}>Reported</button>\r\n                                    :\r\n                                    <button className=\"btn btn-primary\" style={{float:\"right\"}} onClick={()=>{reporting(item._id)}}>Report</button>\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                <br></br>\r\n                                {\r\n                                    state.isadmin\r\n                                    ?\r\n                                    <p>reported {item.reports.length} times</p>\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                {\r\n                                    (item._id==currentPost) \r\n                                    ?\r\n                                    item.comments.map(record=>{\r\n                                        return (\r\n                                            <h6 key={record._id}><span style={{fontWeight:\"700\"}}>{record.postedBy.name} </span>{record.text}</h6>\r\n                                        )\r\n                                    })\r\n                                    :\r\n                                    <p style={{fontWeight:\"300\"}}>Click on show below to check comments..</p>\r\n                                }\r\n                                <form onSubmit={(e)=>{\r\n                                    e.preventDefault()\r\n                                    makeComment(e.target[0].value,item._id)\r\n                                    e.target[0].value=\"\"//I added this line\r\n                                }}>\r\n                                    <input type=\"text\" placeholder=\"Add a comment\"/>\r\n                                    {\r\n                                        (item._id==currentPost)\r\n                                        ?\r\n                                        <button type=\"button\" class=\"btn btn-primary\" onClick={()=>{setCurrentPost(\"\")}}>Hide</button>\r\n                                        :\r\n                                        <button type=\"button\" class=\"btn btn-primary\" onClick={()=>{setCurrentPost(item._id)}}>Show</button>\r\n                                    }\r\n                                    \r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home"]},"metadata":{},"sourceType":"module"}